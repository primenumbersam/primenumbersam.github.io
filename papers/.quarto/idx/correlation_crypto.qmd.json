{"title":"Correlation in Cryptos","markdown":{"yaml":{"title":"Correlation in Cryptos","subtitle":"주요 암호화폐 수익률들의 선형 상관계수 분석","author":"gitSAM","date":"2025-03-08","bibliography":"correlation_crypto.bib","format":{"html":{"code-fold":true,"toc":true}},"jupyter":"python3"},"headingText":"서론","containsRefs":false,"markdown":"\n\nAbstract: 2025년 3월 현재, 시가총액이 크거나 투자자들에게 인기가 많은 주요 암호화폐(popular cryptocurrencies)를 선정하여 지난 1년간의 상관관계를 분석하였다. 대부분의 암호화폐 투자자들은 이러한 주요 암호화폐에 집중적으로 투자하는 경향이 있다. 한편, 암호화폐 자산에 대한 투자자의 평균 투자 기간은 단기(short-term)로, 일반적으로 1개월에서 3개월 사이에 해당한다. 이에 따라 본 연구에서는 데이터의 관측 빈도(observation frequency)를 일간(daily) 단위로 설정하고, 30일, 60일, 90일의 롤링 윈도우(rolling window)를 적용하여 주요 암호화폐 수익률의 선형 상관계수(Pearson's coefficient)를 분석하였다. 이러한 분석은 변동성 헤징(volatility hedging)을 고려한 분산 투자(diversified investment) 전략 수립에 도움이 될 수 있다. 예를 들어, 일정한 투자 금액(예: 1억 원)을 주요 암호화폐 자산군 내에서 어떻게 배분할지 결정하는 데 있어, 상관계수 분석 결과가 투자 비중 조정에 유용한 정보를 제공할 것으로 기대된다.\n\n\n비트코인(BTC)의 가격 및 수익률은, 단기적으로 다음과 같은 관계를 보여왔다. \n\n- NDX (나스닥 100 지수)와 강한 양의 상관관계 [@nasdaq2024 ; @nasdaq2023], \n- DXY (미국 달러 지수)와 강한 음의 상관관계 [@coindesk2023 ; @coinglass2023]. 만약 비트코인 가격이 달러 가격과 장기적으로도 반대 방향으로 움직인다면, 이는 비트코인이 인플레이션 헤지 자산으로 간주될 수도 있을 가능성을 나타낸다 [@science2021]. \n- 금 가격 (GOLD), 국내 실질 총생산량 (GDP) 과의 상관관계는 불명확하거나 간접적인 것으로 알려져 있음 [@cointelegraph2023 ; @cryptoslate2022].\n\n역사적 사례 \n\n- 2020년 COVID-19 위기 이후 BTC와 NDX의 상관관계가 강화됨 [@nasdaq2020], \n- 2022년 5월 연방준비제도(Fed)의 금리 인상 발표 당시, BTC와 NDX 모두 하락.\n- 2023년 비트코인 빙하기 기간 동안 BTC와 NDX의 상관관계 변화 분석 필요.\n- 2024년 3월 비트코인 ETF가 출시하여 기관 투자자 참여가 증가와 함께께 BTC과 NDX의 coupling이 심해짐.  \n\n\n### 주요 암호화폐 목록 및 카테고리\n\n| 암호화폐 (Cryptocurrency) | 심볼 (Ticker) | 카테고리 (Category)         |\n|---------------------|------------|-----------------------|\n| 비트코인 (Bitcoin) | BTC/USD    | Layer 1               |\n| 이더리움 (Ethereum) | ETH/USD    | Layer 1, Smart Contract |\n| 테더 (Tether)      | USDT/USD   | Stablecoin            |\n| 리플 (XRP)        | XRP/USD    | Payment Network       |\n| 솔라나 (Solana)    | SOL/USD    | Layer 1               |\n| 체인링크 (Chainlink) | LINK/USD    | Oracle                |\n| 온도 (Ondo)       | ONDO/USD   | Real-World Asset (RWA) |\n| 카르다노 (Cardano) | ADA/USD    | Layer 1               |\n| 트론 (Tron)       | TRX/USD    | Layer 1               |\n| 도지코인 (Dogecoin) | DOGE/USD    | Meme Coin             |\n\n### 암호화폐 관련 정보 제공 매체 리뷰\n\n- **시세 데이터 (Price Data):** 실시간 및 과거 가격 변동, 거래량(volume) 등\n  - [CoinMarketCap](https://coinmarketcap.com/)\n  - [CoinGecko](https://www.coingecko.com/)\n- **온체인 데이터 (On-Chain Data):** 거래량, 지갑 주소 변화, 네트워크 활성도 등\n  - [Glassnode](https://glassnode.com/)\n  - [IntoTheBlock](https://intotheblock.com/)\n- **시장 분석 (Market Analysis):** 전문가 및 AI 기반 분석 리포트\n  - [Messari](https://messari.io/)\n  - [CryptoQuant](https://cryptoquant.com/)\n- **뉴스 및 이벤트 (News & Events):** 프로젝트 업데이트, 규제 변화 등\n  - [CoinDesk](https://www.coindesk.com/)\n  - [The Block](https://www.theblock.co/)\n- **소셜 미디어 분석 (Social Media Analysis):** 트위터(X), 레딧(Reddit) 등에서의 커뮤니티 반응\n  - [LunarCrush](https://lunarcrush.com/)\n  - [Santiment](https://santiment.net/)\n\n\n## 데이터 분석\n\n### 데이터\n\n- **데이터 소스:** [CCXT](https://github.com/ccxt/ccxt)\n- **데이터 기간:** 2024년 3월 1일 - 2025년 2월 28일\n- **데이터 빈도 (Data Frequency):** 일간(Daily)\n- **분석 대상 암호화폐:**\n  - `BTC/USD, ETH/USD, USDT/USD, XRP/USD, SOL/USD, LINK/USD, ONDO/USD, ADA/USD, TRX/USD, DOGE/USD`\n- **롤링 윈도우 크기 (Rolling Window Size):** 30일, 60일, 90일\n\n### 분석 방법\n\n- 암호화폐의 **일간 수익률(daily return)**을 계산.\n- 각 롤링 윈도우 크기(30, 60, 90일)에 대해 **롤링 상관 행렬(rolling correlation matrix)**을 계산.\n- 평균 상관계수(mean of rolling correlation matrix)를 도출하여 암호화폐 간의 관계를 분석.\n\n```{python}\n# 분석 결과 (Results)\n\n# 여러 거래소에서 지원하는 거래쌍을 확인\n\nimport ccxt\nimport pandas as pd\n\n# 주요 암호화폐 목록\nTICKER_COIN = ['BTC/USDT', 'ETH/USDT', 'USDT/USD', 'XRP/USDT', 'SOL/USDT', 'LINK/USDT', 'ONDO/USDT', 'ADA/USDT', 'TRX/USDT', 'DOGE/USDT']\n\n# 지원하는 거래소 목록\nexchanges = ['binance', 'kraken', 'bitfinex', 'poloniex']\n\n# 각 거래소에서 지원하는 거래쌍 확인\nfor exchange_id in exchanges:\n    exchange = getattr(ccxt, exchange_id)()\n    markets = exchange.load_markets()\n    supported_pairs = [pair for pair in TICKER_COIN if pair in markets]\n    print(f\"{exchange_id} supports: {supported_pairs}\")\n\n# 주요 암호화폐 목록\nbinance_tickers = ['BTC/USDT', 'ETH/USDT', 'XRP/USDT', 'SOL/USDT', 'LINK/USDT', 'ADA/USDT', 'TRX/USDT', 'DOGE/USDT']\nkraken_tickers = ['USDT/USD']\npoloniex_tickers = ['ONDO/USDT']\n\n# 데이터 기간 설정\nSTART_DATE = '2024-03-01'\nEND_DATE = '2025-02-28'\n\n# 거래소 설정\nbinance = ccxt.binance()\nkraken = ccxt.kraken()\npoloniex = ccxt.poloniex()\n\n# 데이터 불러오기 함수\ndef fetch_crypto_data(exchange, tickers, start, end):\n    data = {}\n    start_timestamp = exchange.parse8601(f'{start}T00:00:00Z')\n    end_timestamp = exchange.parse8601(f'{end}T00:00:00Z')\n    for ticker in tickers:\n        try:\n            ohlcv = exchange.fetch_ohlcv(ticker, '1d', since=start_timestamp, limit=1000)\n            df = pd.DataFrame(ohlcv, columns=['timestamp', 'open', 'high', 'low', 'close', 'volume'])\n            df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')\n            df.set_index('timestamp', inplace=True)\n            data[ticker] = df['close']\n        except Exception as e:\n            print(f\"Error fetching {ticker} from {exchange.id}: {e}\")\n    return pd.DataFrame(data)\n\n# 데이터 불러오기\nbinance_data = fetch_crypto_data(binance, binance_tickers, START_DATE, END_DATE)\nkraken_data = fetch_crypto_data(kraken, kraken_tickers, START_DATE, END_DATE)\npoloniex_data = fetch_crypto_data(poloniex, poloniex_tickers, START_DATE, END_DATE)\n\n# 모든 데이터를 하나의 DataFrame으로 병합\ncrypto_prices = pd.concat([binance_data, kraken_data, poloniex_data], axis=1)\n\n# 1) 일간 수익률 계산\ndef compute_returns(price_data: pd.DataFrame) -> pd.DataFrame:\n    return price_data.pct_change().dropna(how='all')\n\ncrypto_returns = compute_returns(crypto_prices)\n\n# 2) 롤링 상관계수 계산\ndef rolling_correlation(returns: pd.DataFrame, window: int) -> pd.DataFrame:\n    \"\"\"\n    returns: (date x tickers) DataFrame\n    window:  rolling window size (days)\n    \n    returns.rolling(window).corr() 결과는\n      - MultiIndex (date, ticker1)\n      - columns = ticker2\n    형태를 가집니다.\n    \"\"\"\n    corr_rolling = returns.rolling(window).corr()\n    return corr_rolling\n\n# 3) 날짜별 상관행렬을 모아서 평균 상관행렬을 산출\ndef average_correlation_matrix(returns: pd.DataFrame, window: int) -> pd.DataFrame:\n    \"\"\"\n    - returns.rolling(window).corr() 결과를 사용\n    - 각 날짜별 (티커 x 티커) 상관행렬을 합산 후, 날짜 개수로 나누어 평균\n    \"\"\"\n    corr_rolling = rolling_correlation(returns, window)\n    \n    # MultiIndex에서 날짜(level=0) 목록을 추출\n    unique_dates = corr_rolling.index.get_level_values(0).unique()\n    tickers = returns.columns\n    \n    # 상관행렬 누적 합을 위한 (티커 x 티커) 형태의 빈 DataFrame\n    sum_matrix = pd.DataFrame(0.0, index=tickers, columns=tickers)\n    count = 0\n    \n    for date in unique_dates:\n        # (ticker1 x ticker2) 형태를 얻기 위해 xs(date, level=0)\n        date_corr = corr_rolling.xs(date, level=0)\n        # date_corr.index = ticker1, date_corr.columns = ticker2\n        \n        # 혹시 일부 티커에 대한 데이터가 누락되었을 경우를 대비하여 reindex\n        date_corr = date_corr.reindex(index=tickers, columns=tickers)\n        \n        # 날짜별 상관행렬(N x N)을 모두 누적\n        if date_corr.notna().all().all():\n            sum_matrix += date_corr.fillna(0.0)\n            count += 1\n    \n    # 평균 계산 (count가 0이 되지 않는다고 가정)\n    mean_matrix = sum_matrix / count\n    \n    return mean_matrix\n\n# 4) 롤링 상관계수 평균 계산\nrolling_corr_results = {}\nfor window in [30, 60, 90]:\n    mean_corr_matrix = average_correlation_matrix(crypto_returns, window)\n    rolling_corr_results[window] = mean_corr_matrix\n```\n\n```{python}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n# 모든 행과 열이 출력되도록 설정\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.expand_frame_repr', False)\n\n# 결과 출력 및 시각화\nfor window, result in rolling_corr_results.items():\n    # 상관 행렬을 DataFrame으로 변환\n    result_df = result.dropna(how='all')\n    print(f\"\\n[Window = {window} days] Mean Correlation Matrix\\n\", result_df)\n    \n    # 히트맵 시각화\n    plt.figure(figsize=(10, 8))\n    \n    # 대각선 요소를 마스킹\n    mask = np.triu(np.ones(result_df.shape, dtype=bool))\n    \n    sns.heatmap(result_df, annot=True, cmap='coolwarm', center=0, mask=mask)\n    plt.title(f'Mean Rolling Correlation Matrix (Window Size: {window} days)')\n    plt.show()\n```\n\n## 토론 (Discussions)\n\n::: {.callout-important}\n변수들의 관찰 주기 (단기? 장기?)에 따라 또는 관찰 시기 (10년전? 지금?)에 따라 변수들 간의 **선형관계**는 유지되지 않을 수 있습니다. 2025년 현재 비트코인 (BTC) 가격은 시장 심리, 규제 변화, 기술적 요인 등에 크게 영향을 받고 있습니다. \n:::\n\n- 상관계수가 낮은 암호화폐 자산 조합을 식별하고, 헤지 투자 전략을 논의.\n- 특정 암호화폐 간의 높은 상관관계가 나타나는 이유 및 그에 따른 리스크 분석.\n\n2024년 3월부터 2025년 2월까지 암호화폐 시장에 큰 영향을 미친 주요 변화 시기와 원인:\n\n1. 비트코인 반감기 (2024년 4월 20일): 비트코인 채굴 보상이 6.25 BTC에서 3.125 BTC로 절반으로 감소. 이는 비트코인의 공급 감소로 이어져 가격에 상승 압력을 가함.\n2. 비트코인 ETF 자금 유입 증가 (2024년 10월): 비트코인 ETF로의 지속적인 자금 유입이 관찰됨. 10월까지 ETF 투자자들이 총 345,200 BTC(200억 달러 이상의 가치)를 매입.\n3. 트럼프의 대통령 당선 (2024년 11월): 도널드 트럼프가 \"암호화폐 대통령\"이 되겠다는 공약을 내세우며 당선됨. 이는 암호화폐 시장에 대한 긍정적인 기대감을 불러일으킴.\n4. EU의 암호화폐 시장 규제(MiCA) 전면 시행 (2024년 12월 30일): 유럽연합에서 암호화폐 시장 규제(MiCA)가 전면 시행됨. 이로 인해 EU 전역에서 암호화폐 서비스 제공업체들에 대한 통일된 규제 프레임워크가 적용되기 시작.\n5. 트럼프의 암호화폐 정책 발표 (2025년 1월): 트럼프 대통령이 취임 후 미국을 \"암호화폐의 수도\"로 만들겠다는 계획을 발표함. 여기에는 비트코인 전략적 비축 등의 아이디어가 포함됨.\n\nstars and bins에서 위의 변화 시기가 bins 역할을 한다는 가정하여, 기간 stars을 다음과 같이 나누어 상관관계를 conditional 해 본다.\n\n1. 20224년 3월 1일 (관측기간 시작일) - 2024년 4월 20일\n2. 2024년 4월 21일 - 2024년 9월 30일\n3. 2024년 10월 1일 - 2024년 11월 5일\n4. 2024년 11월 6일 - 2024년 12월 31일\n5. 2025년 1월 1일 - 2025년 2월 28일 (관측기간 종료일)\n\n변화를 $Z$로 표기했다면, covariance decomposition formula에 의해,\n\n(추후 계속)\n\n---\n\n## 부록: Conditioning Theorems in Probability Theory\n\n### Adam's Law: Smoothing Property of Conditional Expectation\nAlso known as the **Law of Total Expectation** or **Law of Iterated Expectations**.\n\nIf $X$ is a random variable whose expectation $E(X)$ is defined and $Z$ is any random variable defined on the same probability space, then:\n$$E(X) = E(E(X|Z)).$$\n\nA conditional expectation can be viewed as a Radon–Nikodym derivative, making the tower property a direct consequence of the chain rule for conditional expectations.\n\nA special discrete case:\nIf $\\{Z_{i}\\}$ is a finite or countable partition of the sample space, then:\n$$E(X) = \\sum_{i} E(X \\mid Z_i)P(Z_i).$$\n\n\n### Eve's Law: Variance Decomposition Formula\nKnown as the **Conditional Variance Formula** or the **Law of Iterated Variances**.\n\nIf $X$ and $Y$ are random variables defined on the same probability space, and if $Y$ has finite variance, then:\n\n$$\\operatorname{Var}(Y)=E[\\operatorname{Var}(Y\\mid X)]+\\operatorname{Var}(E[Y\\mid X]).$$\n\nThis is a special case of the covariance decomposition formula.\n\nApplications\n\n-  분산 = “(조건부 분산)의 평균” + “(조건부 평균)의 분산\"\n\n- **Analysis of Variance (ANOVA)**: Variability in $Y$ splits into an “unexplained” within-group variance and an “explained” between-group variance. The F-test examines if the explained variance is significantly large, indicating a meaningful effect of $X$ on $Y$.\n\n- **Linear Regression Models**: The proportion of explained variance is measured as $R^2$. For simple linear regression (single predictor), $R^2$ equals the squared Pearson correlation coefficient between $X$ and $Y$.\n\n- **Machine Learning and Bayesian Inference**: In many Bayesian and ensemble methods, one decomposes prediction uncertainty via the law of total variance. For a Bayesian neural network with random parameters $\\theta$: $\\operatorname {Var} (Y)=\\operatorname {E} {\\bigl [}\\operatorname {Var} (Y\\mid \\theta ){\\bigr ]}+\\operatorname {Var} {\\bigl (}\\operatorname {E} [Y\\mid \\theta ]{\\bigr )}$ often referred to as “aleatoric” (within-model) vs. “epistemic” (between-model) uncertainty\n\n- **Information Theory**: For jointly Gaussian $(X,Y)$, the fraction $\\operatorname {Var} (\\operatorname {E} [Y\\mid X])/\\operatorname {Var} (Y)$ relates directly to the mutual information $I(Y;X)$. In non-Gaussian settings, a high explained-variance ratio still indicates significant information about Y contained in X\n\n**Example 1 (Exam Scores)**: Suppose students' exam scores vary between two classrooms. The variance of all scores ($Y$) can be decomposed into the variance within classrooms (unexplained) and the variance between classroom averages (explained), reflecting differences in teaching quality or resources.\n\n**Example 2 (Mixture of Two Gaussians)**: Consider $Y$ as a mixture of two normal distributions, where the mixing distribution is Bernoulli with parameter $p$. Suppose:\n\n$$Y \\mid (X=0) \\sim N(\\mu_0, \\sigma_0^2), \\quad Y \\mid (X=1) \\sim N(\\mu_1, \\sigma_1^2).$$\n\nThen the law of total variance gives:\n\n$$\\operatorname{Var}(Y) = p\\sigma_1^2 + (1-p)\\sigma_0^2 + p(1-p)(\\mu_1 - \\mu_0)^2.$$\n\n\n### Covariance Decomposition Formula\nKnown as the **Law of Total Covariance** or **Conditional Covariance Formula**.\n\nIf $X$, $Y$, and $Z$ are random variables defined on the same probability space, with finite covariance between $X$ and $Y$, then:\n\n$$\\operatorname{cov}(X,Y)=E[\\operatorname{cov}(X,Y\\mid Z)]+\\operatorname{cov}(E[X\\mid Z],E[Y\\mid Z]).$$\n\nThis relationship is a particular instance of the general Law of Total Cumulance and is crucial for analyzing dependencies among variables conditioned on a third variable or groupings.\n\n### Bias-Variance Decomposition of MSE\n\n**Key:** The Bias-Variance Decomposition emphasizes the **trade-off** between making $\\hat{Y}$ reliably close to its own expected value (low variance) and aligning that expected value with the true target $\\mathbb{E}[Y]$ (low bias).\n\nIn many estimation or prediction settings, we have a random outcome $Y$ and an estimator (or model prediction) $\\hat{Y}$. The **Mean Squared Error (MSE)** of $\\hat{Y}$ is:\n\n$$\n\\mathrm{MSE}(\\hat{Y})\n= \\mathbb{E}\\bigl[(Y - \\hat{Y})^2\\bigr].\n$$\n\nIf we decompose $\\hat{Y}$ around its expected value, we can split MSE into a **bias** term and a **variance** term (plus any irreducible noise in certain contexts). Formally, assume\n\n$$\n\\hat{Y} = f(X) + \\text{estimation noise},\n\\quad\nY = f(X) + \\varepsilon,\n$$\n\nwhere $\\varepsilon$ is an irreducible error term with mean zero (e.g., observational or inherent noise). Then:\n\n$$\n\\begin{aligned}\n\\mathrm{MSE}(\\hat{Y})\n&= \\mathbb{E}\\bigl[(Y - \\hat{Y})^2\\bigr]\\\\\n&= \\underbrace{\\mathbb{E}\\Bigl[\\bigl(\\hat{Y} - \\mathbb{E}[\\hat{Y}]\\bigr)^2\\Bigr]}_{\\text{Variance}(\\hat{Y})}\n\\;+\\;\n\\underbrace{\\Bigl(\\mathbb{E}[\\hat{Y}] \\;-\\; \\mathbb{E}[Y]\\Bigr)^2}_{\\text{Bias}(\\hat{Y})^2}\n\\;+\\;\n\\underbrace{\\mathbb{E}\\bigl[\\varepsilon^2\\bigr]}_{\\text{Irreducible noise}},\n\\end{aligned}\n$$\n\nwhere:\n\n1. **Variance**: $\\text{Var}(\\hat{Y})$ represents how much $\\hat{Y}$ fluctuates around its own mean.\n2. **Bias**: $\\text{Bias}(\\hat{Y})^2$ measures how far $\\hat{Y}$ (on average) deviates from the true mean $\\mathbb{E}[Y]$.\n3. **Irreducible noise**: $\\mathbb{E}[\\varepsilon^2]$ is the part of the error that cannot be reduced by any estimator.\n\nIn a strictly theoretical sense (when $\\varepsilon$ is embedded in $Y$), one often writes the **Bias-Variance decomposition** as:\n\n$$\n\\mathrm{MSE}(\\hat{Y})\n= \\underbrace{\\mathrm{Var}(\\hat{Y})}_{\\text{Variance term}}\n\\;+\\;\n\\underbrace{\\mathrm{Bias}(\\hat{Y})^2}_{\\text{Bias term}}.\n$$\n\nHere, if there is additional irreducible noise, it appears as a separate constant term. This decomposition closely aligns with the Law of Total Variance (Eve’s Law) in the sense that the total mean squared difference can be split into a “spread around the estimator’s mean” plus the “squared difference of that mean from the true value,” mirroring how variance itself decomposes into conditional components.\n\n","srcMarkdownNoYaml":"\n\nAbstract: 2025년 3월 현재, 시가총액이 크거나 투자자들에게 인기가 많은 주요 암호화폐(popular cryptocurrencies)를 선정하여 지난 1년간의 상관관계를 분석하였다. 대부분의 암호화폐 투자자들은 이러한 주요 암호화폐에 집중적으로 투자하는 경향이 있다. 한편, 암호화폐 자산에 대한 투자자의 평균 투자 기간은 단기(short-term)로, 일반적으로 1개월에서 3개월 사이에 해당한다. 이에 따라 본 연구에서는 데이터의 관측 빈도(observation frequency)를 일간(daily) 단위로 설정하고, 30일, 60일, 90일의 롤링 윈도우(rolling window)를 적용하여 주요 암호화폐 수익률의 선형 상관계수(Pearson's coefficient)를 분석하였다. 이러한 분석은 변동성 헤징(volatility hedging)을 고려한 분산 투자(diversified investment) 전략 수립에 도움이 될 수 있다. 예를 들어, 일정한 투자 금액(예: 1억 원)을 주요 암호화폐 자산군 내에서 어떻게 배분할지 결정하는 데 있어, 상관계수 분석 결과가 투자 비중 조정에 유용한 정보를 제공할 것으로 기대된다.\n\n## 서론\n\n비트코인(BTC)의 가격 및 수익률은, 단기적으로 다음과 같은 관계를 보여왔다. \n\n- NDX (나스닥 100 지수)와 강한 양의 상관관계 [@nasdaq2024 ; @nasdaq2023], \n- DXY (미국 달러 지수)와 강한 음의 상관관계 [@coindesk2023 ; @coinglass2023]. 만약 비트코인 가격이 달러 가격과 장기적으로도 반대 방향으로 움직인다면, 이는 비트코인이 인플레이션 헤지 자산으로 간주될 수도 있을 가능성을 나타낸다 [@science2021]. \n- 금 가격 (GOLD), 국내 실질 총생산량 (GDP) 과의 상관관계는 불명확하거나 간접적인 것으로 알려져 있음 [@cointelegraph2023 ; @cryptoslate2022].\n\n역사적 사례 \n\n- 2020년 COVID-19 위기 이후 BTC와 NDX의 상관관계가 강화됨 [@nasdaq2020], \n- 2022년 5월 연방준비제도(Fed)의 금리 인상 발표 당시, BTC와 NDX 모두 하락.\n- 2023년 비트코인 빙하기 기간 동안 BTC와 NDX의 상관관계 변화 분석 필요.\n- 2024년 3월 비트코인 ETF가 출시하여 기관 투자자 참여가 증가와 함께께 BTC과 NDX의 coupling이 심해짐.  \n\n\n### 주요 암호화폐 목록 및 카테고리\n\n| 암호화폐 (Cryptocurrency) | 심볼 (Ticker) | 카테고리 (Category)         |\n|---------------------|------------|-----------------------|\n| 비트코인 (Bitcoin) | BTC/USD    | Layer 1               |\n| 이더리움 (Ethereum) | ETH/USD    | Layer 1, Smart Contract |\n| 테더 (Tether)      | USDT/USD   | Stablecoin            |\n| 리플 (XRP)        | XRP/USD    | Payment Network       |\n| 솔라나 (Solana)    | SOL/USD    | Layer 1               |\n| 체인링크 (Chainlink) | LINK/USD    | Oracle                |\n| 온도 (Ondo)       | ONDO/USD   | Real-World Asset (RWA) |\n| 카르다노 (Cardano) | ADA/USD    | Layer 1               |\n| 트론 (Tron)       | TRX/USD    | Layer 1               |\n| 도지코인 (Dogecoin) | DOGE/USD    | Meme Coin             |\n\n### 암호화폐 관련 정보 제공 매체 리뷰\n\n- **시세 데이터 (Price Data):** 실시간 및 과거 가격 변동, 거래량(volume) 등\n  - [CoinMarketCap](https://coinmarketcap.com/)\n  - [CoinGecko](https://www.coingecko.com/)\n- **온체인 데이터 (On-Chain Data):** 거래량, 지갑 주소 변화, 네트워크 활성도 등\n  - [Glassnode](https://glassnode.com/)\n  - [IntoTheBlock](https://intotheblock.com/)\n- **시장 분석 (Market Analysis):** 전문가 및 AI 기반 분석 리포트\n  - [Messari](https://messari.io/)\n  - [CryptoQuant](https://cryptoquant.com/)\n- **뉴스 및 이벤트 (News & Events):** 프로젝트 업데이트, 규제 변화 등\n  - [CoinDesk](https://www.coindesk.com/)\n  - [The Block](https://www.theblock.co/)\n- **소셜 미디어 분석 (Social Media Analysis):** 트위터(X), 레딧(Reddit) 등에서의 커뮤니티 반응\n  - [LunarCrush](https://lunarcrush.com/)\n  - [Santiment](https://santiment.net/)\n\n\n## 데이터 분석\n\n### 데이터\n\n- **데이터 소스:** [CCXT](https://github.com/ccxt/ccxt)\n- **데이터 기간:** 2024년 3월 1일 - 2025년 2월 28일\n- **데이터 빈도 (Data Frequency):** 일간(Daily)\n- **분석 대상 암호화폐:**\n  - `BTC/USD, ETH/USD, USDT/USD, XRP/USD, SOL/USD, LINK/USD, ONDO/USD, ADA/USD, TRX/USD, DOGE/USD`\n- **롤링 윈도우 크기 (Rolling Window Size):** 30일, 60일, 90일\n\n### 분석 방법\n\n- 암호화폐의 **일간 수익률(daily return)**을 계산.\n- 각 롤링 윈도우 크기(30, 60, 90일)에 대해 **롤링 상관 행렬(rolling correlation matrix)**을 계산.\n- 평균 상관계수(mean of rolling correlation matrix)를 도출하여 암호화폐 간의 관계를 분석.\n\n```{python}\n# 분석 결과 (Results)\n\n# 여러 거래소에서 지원하는 거래쌍을 확인\n\nimport ccxt\nimport pandas as pd\n\n# 주요 암호화폐 목록\nTICKER_COIN = ['BTC/USDT', 'ETH/USDT', 'USDT/USD', 'XRP/USDT', 'SOL/USDT', 'LINK/USDT', 'ONDO/USDT', 'ADA/USDT', 'TRX/USDT', 'DOGE/USDT']\n\n# 지원하는 거래소 목록\nexchanges = ['binance', 'kraken', 'bitfinex', 'poloniex']\n\n# 각 거래소에서 지원하는 거래쌍 확인\nfor exchange_id in exchanges:\n    exchange = getattr(ccxt, exchange_id)()\n    markets = exchange.load_markets()\n    supported_pairs = [pair for pair in TICKER_COIN if pair in markets]\n    print(f\"{exchange_id} supports: {supported_pairs}\")\n\n# 주요 암호화폐 목록\nbinance_tickers = ['BTC/USDT', 'ETH/USDT', 'XRP/USDT', 'SOL/USDT', 'LINK/USDT', 'ADA/USDT', 'TRX/USDT', 'DOGE/USDT']\nkraken_tickers = ['USDT/USD']\npoloniex_tickers = ['ONDO/USDT']\n\n# 데이터 기간 설정\nSTART_DATE = '2024-03-01'\nEND_DATE = '2025-02-28'\n\n# 거래소 설정\nbinance = ccxt.binance()\nkraken = ccxt.kraken()\npoloniex = ccxt.poloniex()\n\n# 데이터 불러오기 함수\ndef fetch_crypto_data(exchange, tickers, start, end):\n    data = {}\n    start_timestamp = exchange.parse8601(f'{start}T00:00:00Z')\n    end_timestamp = exchange.parse8601(f'{end}T00:00:00Z')\n    for ticker in tickers:\n        try:\n            ohlcv = exchange.fetch_ohlcv(ticker, '1d', since=start_timestamp, limit=1000)\n            df = pd.DataFrame(ohlcv, columns=['timestamp', 'open', 'high', 'low', 'close', 'volume'])\n            df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')\n            df.set_index('timestamp', inplace=True)\n            data[ticker] = df['close']\n        except Exception as e:\n            print(f\"Error fetching {ticker} from {exchange.id}: {e}\")\n    return pd.DataFrame(data)\n\n# 데이터 불러오기\nbinance_data = fetch_crypto_data(binance, binance_tickers, START_DATE, END_DATE)\nkraken_data = fetch_crypto_data(kraken, kraken_tickers, START_DATE, END_DATE)\npoloniex_data = fetch_crypto_data(poloniex, poloniex_tickers, START_DATE, END_DATE)\n\n# 모든 데이터를 하나의 DataFrame으로 병합\ncrypto_prices = pd.concat([binance_data, kraken_data, poloniex_data], axis=1)\n\n# 1) 일간 수익률 계산\ndef compute_returns(price_data: pd.DataFrame) -> pd.DataFrame:\n    return price_data.pct_change().dropna(how='all')\n\ncrypto_returns = compute_returns(crypto_prices)\n\n# 2) 롤링 상관계수 계산\ndef rolling_correlation(returns: pd.DataFrame, window: int) -> pd.DataFrame:\n    \"\"\"\n    returns: (date x tickers) DataFrame\n    window:  rolling window size (days)\n    \n    returns.rolling(window).corr() 결과는\n      - MultiIndex (date, ticker1)\n      - columns = ticker2\n    형태를 가집니다.\n    \"\"\"\n    corr_rolling = returns.rolling(window).corr()\n    return corr_rolling\n\n# 3) 날짜별 상관행렬을 모아서 평균 상관행렬을 산출\ndef average_correlation_matrix(returns: pd.DataFrame, window: int) -> pd.DataFrame:\n    \"\"\"\n    - returns.rolling(window).corr() 결과를 사용\n    - 각 날짜별 (티커 x 티커) 상관행렬을 합산 후, 날짜 개수로 나누어 평균\n    \"\"\"\n    corr_rolling = rolling_correlation(returns, window)\n    \n    # MultiIndex에서 날짜(level=0) 목록을 추출\n    unique_dates = corr_rolling.index.get_level_values(0).unique()\n    tickers = returns.columns\n    \n    # 상관행렬 누적 합을 위한 (티커 x 티커) 형태의 빈 DataFrame\n    sum_matrix = pd.DataFrame(0.0, index=tickers, columns=tickers)\n    count = 0\n    \n    for date in unique_dates:\n        # (ticker1 x ticker2) 형태를 얻기 위해 xs(date, level=0)\n        date_corr = corr_rolling.xs(date, level=0)\n        # date_corr.index = ticker1, date_corr.columns = ticker2\n        \n        # 혹시 일부 티커에 대한 데이터가 누락되었을 경우를 대비하여 reindex\n        date_corr = date_corr.reindex(index=tickers, columns=tickers)\n        \n        # 날짜별 상관행렬(N x N)을 모두 누적\n        if date_corr.notna().all().all():\n            sum_matrix += date_corr.fillna(0.0)\n            count += 1\n    \n    # 평균 계산 (count가 0이 되지 않는다고 가정)\n    mean_matrix = sum_matrix / count\n    \n    return mean_matrix\n\n# 4) 롤링 상관계수 평균 계산\nrolling_corr_results = {}\nfor window in [30, 60, 90]:\n    mean_corr_matrix = average_correlation_matrix(crypto_returns, window)\n    rolling_corr_results[window] = mean_corr_matrix\n```\n\n```{python}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n# 모든 행과 열이 출력되도록 설정\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.expand_frame_repr', False)\n\n# 결과 출력 및 시각화\nfor window, result in rolling_corr_results.items():\n    # 상관 행렬을 DataFrame으로 변환\n    result_df = result.dropna(how='all')\n    print(f\"\\n[Window = {window} days] Mean Correlation Matrix\\n\", result_df)\n    \n    # 히트맵 시각화\n    plt.figure(figsize=(10, 8))\n    \n    # 대각선 요소를 마스킹\n    mask = np.triu(np.ones(result_df.shape, dtype=bool))\n    \n    sns.heatmap(result_df, annot=True, cmap='coolwarm', center=0, mask=mask)\n    plt.title(f'Mean Rolling Correlation Matrix (Window Size: {window} days)')\n    plt.show()\n```\n\n## 토론 (Discussions)\n\n::: {.callout-important}\n변수들의 관찰 주기 (단기? 장기?)에 따라 또는 관찰 시기 (10년전? 지금?)에 따라 변수들 간의 **선형관계**는 유지되지 않을 수 있습니다. 2025년 현재 비트코인 (BTC) 가격은 시장 심리, 규제 변화, 기술적 요인 등에 크게 영향을 받고 있습니다. \n:::\n\n- 상관계수가 낮은 암호화폐 자산 조합을 식별하고, 헤지 투자 전략을 논의.\n- 특정 암호화폐 간의 높은 상관관계가 나타나는 이유 및 그에 따른 리스크 분석.\n\n2024년 3월부터 2025년 2월까지 암호화폐 시장에 큰 영향을 미친 주요 변화 시기와 원인:\n\n1. 비트코인 반감기 (2024년 4월 20일): 비트코인 채굴 보상이 6.25 BTC에서 3.125 BTC로 절반으로 감소. 이는 비트코인의 공급 감소로 이어져 가격에 상승 압력을 가함.\n2. 비트코인 ETF 자금 유입 증가 (2024년 10월): 비트코인 ETF로의 지속적인 자금 유입이 관찰됨. 10월까지 ETF 투자자들이 총 345,200 BTC(200억 달러 이상의 가치)를 매입.\n3. 트럼프의 대통령 당선 (2024년 11월): 도널드 트럼프가 \"암호화폐 대통령\"이 되겠다는 공약을 내세우며 당선됨. 이는 암호화폐 시장에 대한 긍정적인 기대감을 불러일으킴.\n4. EU의 암호화폐 시장 규제(MiCA) 전면 시행 (2024년 12월 30일): 유럽연합에서 암호화폐 시장 규제(MiCA)가 전면 시행됨. 이로 인해 EU 전역에서 암호화폐 서비스 제공업체들에 대한 통일된 규제 프레임워크가 적용되기 시작.\n5. 트럼프의 암호화폐 정책 발표 (2025년 1월): 트럼프 대통령이 취임 후 미국을 \"암호화폐의 수도\"로 만들겠다는 계획을 발표함. 여기에는 비트코인 전략적 비축 등의 아이디어가 포함됨.\n\nstars and bins에서 위의 변화 시기가 bins 역할을 한다는 가정하여, 기간 stars을 다음과 같이 나누어 상관관계를 conditional 해 본다.\n\n1. 20224년 3월 1일 (관측기간 시작일) - 2024년 4월 20일\n2. 2024년 4월 21일 - 2024년 9월 30일\n3. 2024년 10월 1일 - 2024년 11월 5일\n4. 2024년 11월 6일 - 2024년 12월 31일\n5. 2025년 1월 1일 - 2025년 2월 28일 (관측기간 종료일)\n\n변화를 $Z$로 표기했다면, covariance decomposition formula에 의해,\n\n(추후 계속)\n\n---\n\n## 부록: Conditioning Theorems in Probability Theory\n\n### Adam's Law: Smoothing Property of Conditional Expectation\nAlso known as the **Law of Total Expectation** or **Law of Iterated Expectations**.\n\nIf $X$ is a random variable whose expectation $E(X)$ is defined and $Z$ is any random variable defined on the same probability space, then:\n$$E(X) = E(E(X|Z)).$$\n\nA conditional expectation can be viewed as a Radon–Nikodym derivative, making the tower property a direct consequence of the chain rule for conditional expectations.\n\nA special discrete case:\nIf $\\{Z_{i}\\}$ is a finite or countable partition of the sample space, then:\n$$E(X) = \\sum_{i} E(X \\mid Z_i)P(Z_i).$$\n\n\n### Eve's Law: Variance Decomposition Formula\nKnown as the **Conditional Variance Formula** or the **Law of Iterated Variances**.\n\nIf $X$ and $Y$ are random variables defined on the same probability space, and if $Y$ has finite variance, then:\n\n$$\\operatorname{Var}(Y)=E[\\operatorname{Var}(Y\\mid X)]+\\operatorname{Var}(E[Y\\mid X]).$$\n\nThis is a special case of the covariance decomposition formula.\n\nApplications\n\n-  분산 = “(조건부 분산)의 평균” + “(조건부 평균)의 분산\"\n\n- **Analysis of Variance (ANOVA)**: Variability in $Y$ splits into an “unexplained” within-group variance and an “explained” between-group variance. The F-test examines if the explained variance is significantly large, indicating a meaningful effect of $X$ on $Y$.\n\n- **Linear Regression Models**: The proportion of explained variance is measured as $R^2$. For simple linear regression (single predictor), $R^2$ equals the squared Pearson correlation coefficient between $X$ and $Y$.\n\n- **Machine Learning and Bayesian Inference**: In many Bayesian and ensemble methods, one decomposes prediction uncertainty via the law of total variance. For a Bayesian neural network with random parameters $\\theta$: $\\operatorname {Var} (Y)=\\operatorname {E} {\\bigl [}\\operatorname {Var} (Y\\mid \\theta ){\\bigr ]}+\\operatorname {Var} {\\bigl (}\\operatorname {E} [Y\\mid \\theta ]{\\bigr )}$ often referred to as “aleatoric” (within-model) vs. “epistemic” (between-model) uncertainty\n\n- **Information Theory**: For jointly Gaussian $(X,Y)$, the fraction $\\operatorname {Var} (\\operatorname {E} [Y\\mid X])/\\operatorname {Var} (Y)$ relates directly to the mutual information $I(Y;X)$. In non-Gaussian settings, a high explained-variance ratio still indicates significant information about Y contained in X\n\n**Example 1 (Exam Scores)**: Suppose students' exam scores vary between two classrooms. The variance of all scores ($Y$) can be decomposed into the variance within classrooms (unexplained) and the variance between classroom averages (explained), reflecting differences in teaching quality or resources.\n\n**Example 2 (Mixture of Two Gaussians)**: Consider $Y$ as a mixture of two normal distributions, where the mixing distribution is Bernoulli with parameter $p$. Suppose:\n\n$$Y \\mid (X=0) \\sim N(\\mu_0, \\sigma_0^2), \\quad Y \\mid (X=1) \\sim N(\\mu_1, \\sigma_1^2).$$\n\nThen the law of total variance gives:\n\n$$\\operatorname{Var}(Y) = p\\sigma_1^2 + (1-p)\\sigma_0^2 + p(1-p)(\\mu_1 - \\mu_0)^2.$$\n\n\n### Covariance Decomposition Formula\nKnown as the **Law of Total Covariance** or **Conditional Covariance Formula**.\n\nIf $X$, $Y$, and $Z$ are random variables defined on the same probability space, with finite covariance between $X$ and $Y$, then:\n\n$$\\operatorname{cov}(X,Y)=E[\\operatorname{cov}(X,Y\\mid Z)]+\\operatorname{cov}(E[X\\mid Z],E[Y\\mid Z]).$$\n\nThis relationship is a particular instance of the general Law of Total Cumulance and is crucial for analyzing dependencies among variables conditioned on a third variable or groupings.\n\n### Bias-Variance Decomposition of MSE\n\n**Key:** The Bias-Variance Decomposition emphasizes the **trade-off** between making $\\hat{Y}$ reliably close to its own expected value (low variance) and aligning that expected value with the true target $\\mathbb{E}[Y]$ (low bias).\n\nIn many estimation or prediction settings, we have a random outcome $Y$ and an estimator (or model prediction) $\\hat{Y}$. The **Mean Squared Error (MSE)** of $\\hat{Y}$ is:\n\n$$\n\\mathrm{MSE}(\\hat{Y})\n= \\mathbb{E}\\bigl[(Y - \\hat{Y})^2\\bigr].\n$$\n\nIf we decompose $\\hat{Y}$ around its expected value, we can split MSE into a **bias** term and a **variance** term (plus any irreducible noise in certain contexts). Formally, assume\n\n$$\n\\hat{Y} = f(X) + \\text{estimation noise},\n\\quad\nY = f(X) + \\varepsilon,\n$$\n\nwhere $\\varepsilon$ is an irreducible error term with mean zero (e.g., observational or inherent noise). Then:\n\n$$\n\\begin{aligned}\n\\mathrm{MSE}(\\hat{Y})\n&= \\mathbb{E}\\bigl[(Y - \\hat{Y})^2\\bigr]\\\\\n&= \\underbrace{\\mathbb{E}\\Bigl[\\bigl(\\hat{Y} - \\mathbb{E}[\\hat{Y}]\\bigr)^2\\Bigr]}_{\\text{Variance}(\\hat{Y})}\n\\;+\\;\n\\underbrace{\\Bigl(\\mathbb{E}[\\hat{Y}] \\;-\\; \\mathbb{E}[Y]\\Bigr)^2}_{\\text{Bias}(\\hat{Y})^2}\n\\;+\\;\n\\underbrace{\\mathbb{E}\\bigl[\\varepsilon^2\\bigr]}_{\\text{Irreducible noise}},\n\\end{aligned}\n$$\n\nwhere:\n\n1. **Variance**: $\\text{Var}(\\hat{Y})$ represents how much $\\hat{Y}$ fluctuates around its own mean.\n2. **Bias**: $\\text{Bias}(\\hat{Y})^2$ measures how far $\\hat{Y}$ (on average) deviates from the true mean $\\mathbb{E}[Y]$.\n3. **Irreducible noise**: $\\mathbb{E}[\\varepsilon^2]$ is the part of the error that cannot be reduced by any estimator.\n\nIn a strictly theoretical sense (when $\\varepsilon$ is embedded in $Y$), one often writes the **Bias-Variance decomposition** as:\n\n$$\n\\mathrm{MSE}(\\hat{Y})\n= \\underbrace{\\mathrm{Var}(\\hat{Y})}_{\\text{Variance term}}\n\\;+\\;\n\\underbrace{\\mathrm{Bias}(\\hat{Y})^2}_{\\text{Bias term}}.\n$$\n\nHere, if there is additional irreducible noise, it appears as a separate constant term. This decomposition closely aligns with the Law of Total Variance (Eve’s Law) in the sense that the total mean squared difference can be split into a “spread around the estimator’s mean” plus the “squared difference of that mean from the true value,” mirroring how variance itself decomposes into conditional components.\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"number-sections":false,"output-file":"correlation_crypto.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.21","author":"gitSAM","jupyter":"python3","theme":"cosmo","title":"Correlation in Cryptos","subtitle":"주요 암호화폐 수익률들의 선형 상관계수 분석","date":"2025-03-08","bibliography":["correlation_crypto.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}