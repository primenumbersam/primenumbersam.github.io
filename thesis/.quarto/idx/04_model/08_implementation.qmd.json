{"title":"Empirical Study","markdown":{"yaml":{"title":"Empirical Study","subtitle":"08 Implementation"},"headingText":"Implementation Notes","containsRefs":false,"markdown":"\n\n전체 실증 연구의 **재현 가능성(reproducibility)**과 **코드–논문 간 연결성(mapping)**을 보장\n\n1. 전체 워크플로우 요약 (Workflow Overview)  \n2. 사용한 언어 및 라이브러리 목록 (Environment & Packages)  \n3. 주요 Jupyter Notebook 목록 및 각 분석 파트와의 매핑 (Notebook Structure)  \n4. 그래프, 테이블 파일 저장 구조 안내 (Output Artifacts)  \n5. 재현을 위한 실행 방식 안내 (Reproducibility)\n\n\nThis section summarizes the technical details of the implementation, including programming environment, data processing tools, and notebook structure. The entire empirical workflow was executed using Python and organized into modular Jupyter notebooks.\n\n## 1. Programming Environment\n\nAll analyses were conducted in Python 3. The core packages used are:\n\n- **Data Processing**: `pandas`, `numpy`\n- **Statistical Modeling**: `statsmodels`, `scipy`, `sklearn`\n- **Visualization**: `matplotlib`, `seaborn`, `plotly`\n\nAdditional tools include `quarto` for documentation integration and `joblib`/`multiprocessing` for parallel computation in robustness tests.\n\n## 2. Notebook Structure\n\nThe analysis was modularized into separate notebooks, each corresponding to a core component of the empirical strategy. The mapping between notebooks and sections of the paper is as follows:\n\n| Notebook File              | Description                                                       | Related Section             |\n|---------------------------|-------------------------------------------------------------------|-----------------------------|\n| `02_data.ipynb`           | Load and clean CRSP & FF data, handle delisting and NaNs         | Section 2 – Data            |\n| `03_ff_compare.ipynb`     | Analyze FF size deciles: distribution, Sharpe dynamics           | Section 3 – FF Benchmark    |\n| `04_structure.ipynb`      | Capital convexity, mixture modeling, and Markov transitions      | Section 4 – Structural      |\n| `05_strategy.ipynb`       | Implement TBTF What–How–When logic, portfolio generator          | Section 5 – Strategy        |\n| `06_performance.ipynb`    | Risk-adjusted performance vs. indices and ETFs                   | Section 6 – Performance     |\n| `07_robustness.ipynb`     | Varying n, frequency, sample splits, alternative weights         | Section 7 – Robustness      |\n\nEach notebook contains reusable functions for loading, constructing, and evaluating portfolios, making the workflow easily reproducible.\n\n## 3. Output Artifacts\n\nAll result files—figures and tables—are stored in the following structure:\n\n- `figs/`: All figures (e.g., PNG/HTML for Quarto embedding)\n- `tables/`: Summary statistics and transition matrices (CSV/HTML)\n- File naming convention:  \n  - `sharpe_curve_s10_b10.png`, `mixture_tbtf_post2010.png`  \n  - `transition_matrix_tbtf.csv`, `summary_stats_tbtf.html`\n\nThese are linked in the corresponding `.qmd` sections using relative paths for seamless integration.\n\n## 4. Reproducibility\n\nTo replicate the analysis:\n\n1. Clone the repository and install dependencies (via `pip install -r requirements.txt`)\n2. Download CRSP/Compustat data from WRDS (with appropriate credentials)\n3. Run notebooks in the order shown above or use batch rendering via `papermill` or `quarto`\n4. Render full manuscript via:\n\n```bash\nquarto render\n```\n\nOptional scripts for batch portfolio construction and robustness testing (e.g., multiprocessing-based grid search) are located in `/scripts`.\n\n---\n\n## Appendix {.appendix}\n\n### requirements.txt\n\n```txt\npandas>=1.5\nnumpy>=1.22\nscikit-learn>=1.3\nmatplotlib>=3.6\nseaborn>=0.12\nstatsmodels>=0.13\nscipy>=1.10\nplotly>=5.10\nquarto>=1.3\n```","srcMarkdownNoYaml":"\n\n전체 실증 연구의 **재현 가능성(reproducibility)**과 **코드–논문 간 연결성(mapping)**을 보장\n\n1. 전체 워크플로우 요약 (Workflow Overview)  \n2. 사용한 언어 및 라이브러리 목록 (Environment & Packages)  \n3. 주요 Jupyter Notebook 목록 및 각 분석 파트와의 매핑 (Notebook Structure)  \n4. 그래프, 테이블 파일 저장 구조 안내 (Output Artifacts)  \n5. 재현을 위한 실행 방식 안내 (Reproducibility)\n\n# Implementation Notes\n\nThis section summarizes the technical details of the implementation, including programming environment, data processing tools, and notebook structure. The entire empirical workflow was executed using Python and organized into modular Jupyter notebooks.\n\n## 1. Programming Environment\n\nAll analyses were conducted in Python 3. The core packages used are:\n\n- **Data Processing**: `pandas`, `numpy`\n- **Statistical Modeling**: `statsmodels`, `scipy`, `sklearn`\n- **Visualization**: `matplotlib`, `seaborn`, `plotly`\n\nAdditional tools include `quarto` for documentation integration and `joblib`/`multiprocessing` for parallel computation in robustness tests.\n\n## 2. Notebook Structure\n\nThe analysis was modularized into separate notebooks, each corresponding to a core component of the empirical strategy. The mapping between notebooks and sections of the paper is as follows:\n\n| Notebook File              | Description                                                       | Related Section             |\n|---------------------------|-------------------------------------------------------------------|-----------------------------|\n| `02_data.ipynb`           | Load and clean CRSP & FF data, handle delisting and NaNs         | Section 2 – Data            |\n| `03_ff_compare.ipynb`     | Analyze FF size deciles: distribution, Sharpe dynamics           | Section 3 – FF Benchmark    |\n| `04_structure.ipynb`      | Capital convexity, mixture modeling, and Markov transitions      | Section 4 – Structural      |\n| `05_strategy.ipynb`       | Implement TBTF What–How–When logic, portfolio generator          | Section 5 – Strategy        |\n| `06_performance.ipynb`    | Risk-adjusted performance vs. indices and ETFs                   | Section 6 – Performance     |\n| `07_robustness.ipynb`     | Varying n, frequency, sample splits, alternative weights         | Section 7 – Robustness      |\n\nEach notebook contains reusable functions for loading, constructing, and evaluating portfolios, making the workflow easily reproducible.\n\n## 3. Output Artifacts\n\nAll result files—figures and tables—are stored in the following structure:\n\n- `figs/`: All figures (e.g., PNG/HTML for Quarto embedding)\n- `tables/`: Summary statistics and transition matrices (CSV/HTML)\n- File naming convention:  \n  - `sharpe_curve_s10_b10.png`, `mixture_tbtf_post2010.png`  \n  - `transition_matrix_tbtf.csv`, `summary_stats_tbtf.html`\n\nThese are linked in the corresponding `.qmd` sections using relative paths for seamless integration.\n\n## 4. Reproducibility\n\nTo replicate the analysis:\n\n1. Clone the repository and install dependencies (via `pip install -r requirements.txt`)\n2. Download CRSP/Compustat data from WRDS (with appropriate credentials)\n3. Run notebooks in the order shown above or use batch rendering via `papermill` or `quarto`\n4. Render full manuscript via:\n\n```bash\nquarto render\n```\n\nOptional scripts for batch portfolio construction and robustness testing (e.g., multiprocessing-based grid search) are located in `/scripts`.\n\n---\n\n## Appendix {.appendix}\n\n### requirements.txt\n\n```txt\npandas>=1.5\nnumpy>=1.22\nscikit-learn>=1.3\nmatplotlib>=3.6\nseaborn>=0.12\nstatsmodels>=0.13\nscipy>=1.10\nplotly>=5.10\nquarto>=1.3\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"number-sections":false,"output-file":"08_implementation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","author":"gitSAM","date":"2025-03-23","bibliography":["../references.bib"],"jupyter":"python3","theme":"cosmo","title":"Empirical Study","subtitle":"08 Implementation"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}