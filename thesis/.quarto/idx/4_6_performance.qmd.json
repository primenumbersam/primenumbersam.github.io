{"title":"06 Performance","markdown":{"yaml":{"title":"06 Performance","execute":{"enabled":false}},"headingText":"TBTF Interpretation: Market Power, Return, and Volatility","containsRefs":false,"markdown":"\n\n\n```{python}\n\nfrom scipy.stats import skew, kurtosis\nimport numpy as np\nimport pandas as pd\n\nimport sqlite3\ntbtf = sqlite3.connect(database=\"../../tbtf.sqlite\")\n\n#cursor = tbtf.cursor()\n#cursor.execute(\"SELECT name FROM sqlite_master WHERE type='table';\")\n#print(cursor.fetchall())\n\n#crsp = pd.read_sql_query(\n#  sql=\"SELECT * FROM crsp\",\n#  con=tbtf,\n#  parse_dates={\"date\"}\n#)\n\nff3 = pd.read_sql_query(\n  sql=\"SELECT * FROM ff3\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\npre_index = pd.read_sql_query(\n  sql=\"SELECT * FROM pre_index\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\npost_index = pd.read_sql_query(\n  sql=\"SELECT * FROM post_index\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\npost_ff = pd.read_sql_query(\n  sql=\"SELECT * FROM post_ff\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\ndef evaluate_performance(returns, eta=3, p=0.01, periods_per_year=12):\n    \"\"\"\n    주어진 초과수익률(returns) 시계열에 대해 다양한 성과 지표를 계산합니다.\n    returns는 이미 risk-free rate이 차감된 초과수익률(ret_excess) 시계열이라고 가정합니다.\n    \n    Parameters:\n      - returns: pandas Series 또는 numpy array 형태의 초과수익률\n      - eta: CRRA 계수 (default: 3)\n      - p: Omega ratio 계산 시 기준 수익률 threshold (default: 0.01)\n      - periods_per_year: 연간 관측 기간 수 (예: 월간이면 12, 6M이면 2, 연간이면 1)\n      \n    Returns:\n      - metrics: dict 형태로 각 성과 지표를 반환\n    \"\"\"\n    def ann_return(r):\n        return (1 + r).prod()**(periods_per_year / len(r)) - 1\n\n    def ann_vol(r):\n        return r.std() * np.sqrt(periods_per_year)\n\n    def sharpe(r):\n        return r.mean() / r.std() * np.sqrt(periods_per_year)\n\n    def sortino(r):\n        downside = r[r < 0]\n        # 만약 downside의 표준편차가 0인 경우, 평균이 양수면 무한대로 처리\n        if downside.std() > 0:\n            return r.mean() / downside.std() * np.sqrt(periods_per_year)\n        else:\n            return np.inf if r.mean() > 0 else 0\n\n    def omega(r):\n        gains = r[r > p] - p\n        losses = p - r[r < p]\n        return gains.sum() / losses.sum() if losses.sum() > 0 else np.nan\n\n    def max_dd(r):\n        cum = (1 + r).cumprod()\n        dd = (cum - cum.cummax()) / cum.cummax()\n        return dd.min()\n\n    def calmar(r):\n        a = ann_return(r)\n        m = max_dd(r)\n        return a / abs(m) if m < 0 else np.nan\n\n    def expected_crra(r):\n        x = 1 + r\n        if eta == 1:\n            return np.log(x).mean()\n        else:\n            return ((x**(1 - eta) - 1) / (1 - eta)).mean()\n\n    def fisher_skew(r):\n        return skew(r, bias=False)\n\n    def pearson_skew(r):\n        mu, med, std = r.mean(), r.median(), r.std()\n        return 3 * (mu - med) / std if std > 0 else np.nan\n\n    def ex_kurt(r):\n        return kurtosis(r, fisher=True, bias=False)\n\n    metrics = {\n        'Annualized Return': ann_return(returns),\n        'Annualized Volatility': ann_vol(returns),\n        'Sharpe Ratio': sharpe(returns),\n        'Sortino Ratio': sortino(returns),\n        'Omega Ratio': omega(returns),\n        'Max Drawdown': max_dd(returns),\n        'Calmar Ratio': calmar(returns),\n        'Expected CRRA': expected_crra(returns),\n        'Fisher Skewness': fisher_skew(returns),\n        'Pearson Skewness': pearson_skew(returns),\n        'Excess Kurtosis': ex_kurt(returns),\n    }\n    return metrics\n\n# 예시 사용:\n# 만약 재조정 주기가 '6M'이면, periods_per_year=2, '12M'이면 1, '1M'이면 12 등을 전달.\n# 예: monthly returns 시, evaluate_performance(returns, periods_per_year=12)\n\n# 벤치마크 포트폴리오 들의 Excess return (i.e. return - r_f) 계산 \ndef subtract_rf_from_df(df, ff3, date_col='date'):\n    \"\"\"\n    df: 날짜와 수익률 데이터를 포함하는 DataFrame. \n        날짜 컬럼 이름은 기본적으로 'date'로 가정합니다.\n    ff3: ff3 데이터프레임, 'date'와 'r_f' 컬럼을 포함해야 합니다.\n    date_col: 날짜 컬럼의 이름 (기본값 'date').\n    \n    df의 모든 숫자형 수익률 컬럼(날짜 컬럼 제외)에서 ff3의 r_f 값을 해당 날짜에 맞게 차감합니다.\n    \"\"\"\n    # 날짜 컬럼을 datetime으로 변환\n    df[date_col] = pd.to_datetime(df[date_col])\n    ff3['date'] = pd.to_datetime(ff3['date'])\n    \n    # ff3의 r_f 컬럼만 추출 후, 날짜 기준으로 병합\n    merged = df.merge(ff3[[date_col, 'r_f']], on=date_col, how='left')\n    \n    # 날짜와 r_f를 제외한 모든 숫자형 컬럼에 대해 r_f를 차감\n    numeric_cols = merged.select_dtypes(include='number').columns.tolist()\n    # 만약 날짜 컬럼이 숫자형으로 인식될 경우, 제거\n    if date_col in numeric_cols:\n        numeric_cols.remove(date_col)\n    if 'r_f' in numeric_cols:\n        numeric_cols.remove('r_f')\n        \n    for col in numeric_cols:\n        merged[col] = merged[col] - merged['r_f']\n        \n    # r_f 컬럼은 제거\n    return merged.drop(columns='r_f')\n\npre_index_excess  = subtract_rf_from_df(pre_index, ff3, date_col='date')\npost_index_excess = subtract_rf_from_df(post_index, ff3, date_col='date')\npost_ff_excess    = subtract_rf_from_df(post_ff, ff3, date_col='date')\n\n```\n\nA core pillar of traditional asset pricing theory posits that investors are compensated for bearing systematic risk. Higher expected returns are assumed to reflect higher exposures to non-diversifiable shocks. This logic extends into the literature linking **market power** to **expected return**: dominant firms with pricing power and barriers to entry may generate higher profit margins, which are viewed as justifying higher long-run returns, albeit at the cost of greater cyclicality or factor sensitivity.\n\nHowever, the **Too Big to Fail (TBTF)** framework challenges this equilibrium-based view by demonstrating that the structural dominance of mega-cap firms yields not only **comparable or higher average returns**, but also **consistently lower volatility**. Our empirical analysis reveals that:\n\n- The top-ranked firms (e.g., top 10% by market cap) consistently generate **higher median returns** with **narrower return distributions**, virtually eliminating downside outliers post-2010.\n\n\n```{python}\n# 성과 지표 평가\nperformance = evaluate_performance(pre_index_excess['^NDX'], eta=3, p=0.01)\nperformance\n```\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Pre-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='pre-2010')\n```\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Post-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='post-2010')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Pre-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2000-01-01', end_date='2009-12-31')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Post-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2010-01-01', end_date='2023-12-31')\n```\n\nThis figure compares the monthly return distribution of the TBTF portfolio and the market-wide index (e.g., SPY or VTI) during the post-2010 period. TBTF returns are notably less dispersed and exhibit a thicker concentration around the mean.\n\nIn this context, we propose a reframed interpretation:\n\n> Market power no longer demands a risk premium—it precludes the risk itself.\n\nTo formalize this intuition, we treat:\n- **log(capshare)** as a proxy for forward-looking return potential, reflecting capital markets' implicit confidence in dominant firms,\n- and **percentile-based rank** (e.g., within top-𝑛 assets) as a proxy for structural market power.\n\nThe estimated relationship between rank and log(capshare) is **strongly convex**, best approximated by an **exponential function**. This convexity implies that **small changes in rank yield disproportionate shifts in capital allocation**, consistent with a **winner-takes-most** dynamic.\n\nWhile prior studies (e.g., Hou et al., 2015; Bai et al., 2019) posit that higher expected returns arise as compensation for firm-level productivity or intangible capital risk, our results suggest an alternative mechanism: persistent capital lock-in due to passive flows, platform effects, and institutional mandates.\n\nThis reorientation invites a broader philosophical reframing:  \nTBTF stocks do not merely command a premium for bearing risk—they accumulate rents by **removing risk** through their institutional embeddedness.\n\nIn contrast to traditional convex pricing models where **market competition disciplines excess returns**, the TBTF structure implies a regime of **quasi-feudal rent extraction**, where **market power ensures return, not through risk, but through insulation**.\n\n\n## Risk-Adjusted Performance Metrics\n\nWe evaluate the TBTF strategy against standard benchmarks using several key performance metrics: Sharpe ratio, Sortino ratio, Omega ratio, maximum drawdown, and CRRA utility. All metrics are computed over the out-of-sample post-2010 period.\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Pre-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='pre-2010')\n```\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Post-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='post-2010')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Pre-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2000-01-01', end_date='2009-12-31')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Post-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2010-01-01', end_date='2023-12-31')\n```\n\n\nThe TBTF portfolio consistently outperforms across all dimensions, with both higher average returns and lower downside risk exposure. Notably, its Omega ratio remains significantly above 1 for low thresholds, reflecting extremely thin left tails.\n\n\n## Clarification on Distributional Decomposition\n\nAlthough the intuition behind TBTF's superior return profile is deeply tied to changes in distributional dynamics, we emphasize that the Gaussian Mixture decomposition, transition matrix estimation, and stationary state analysis are fully addressed in [Section 4](4_4_structure.qmd). Readers seeking formal modeling of return asymmetry, regime persistence, or long-run capital concentration should refer to that section.\n\nIn this performance section, we instead emphasize practical backtest results and the empirical coherence of TBTF’s return superiority, without over-relying on latent structure estimation.\n","srcMarkdownNoYaml":"\n\n## TBTF Interpretation: Market Power, Return, and Volatility\n\n```{python}\n\nfrom scipy.stats import skew, kurtosis\nimport numpy as np\nimport pandas as pd\n\nimport sqlite3\ntbtf = sqlite3.connect(database=\"../../tbtf.sqlite\")\n\n#cursor = tbtf.cursor()\n#cursor.execute(\"SELECT name FROM sqlite_master WHERE type='table';\")\n#print(cursor.fetchall())\n\n#crsp = pd.read_sql_query(\n#  sql=\"SELECT * FROM crsp\",\n#  con=tbtf,\n#  parse_dates={\"date\"}\n#)\n\nff3 = pd.read_sql_query(\n  sql=\"SELECT * FROM ff3\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\npre_index = pd.read_sql_query(\n  sql=\"SELECT * FROM pre_index\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\npost_index = pd.read_sql_query(\n  sql=\"SELECT * FROM post_index\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\npost_ff = pd.read_sql_query(\n  sql=\"SELECT * FROM post_ff\",\n  con=tbtf,\n  parse_dates={\"date\"}\n)\n\ndef evaluate_performance(returns, eta=3, p=0.01, periods_per_year=12):\n    \"\"\"\n    주어진 초과수익률(returns) 시계열에 대해 다양한 성과 지표를 계산합니다.\n    returns는 이미 risk-free rate이 차감된 초과수익률(ret_excess) 시계열이라고 가정합니다.\n    \n    Parameters:\n      - returns: pandas Series 또는 numpy array 형태의 초과수익률\n      - eta: CRRA 계수 (default: 3)\n      - p: Omega ratio 계산 시 기준 수익률 threshold (default: 0.01)\n      - periods_per_year: 연간 관측 기간 수 (예: 월간이면 12, 6M이면 2, 연간이면 1)\n      \n    Returns:\n      - metrics: dict 형태로 각 성과 지표를 반환\n    \"\"\"\n    def ann_return(r):\n        return (1 + r).prod()**(periods_per_year / len(r)) - 1\n\n    def ann_vol(r):\n        return r.std() * np.sqrt(periods_per_year)\n\n    def sharpe(r):\n        return r.mean() / r.std() * np.sqrt(periods_per_year)\n\n    def sortino(r):\n        downside = r[r < 0]\n        # 만약 downside의 표준편차가 0인 경우, 평균이 양수면 무한대로 처리\n        if downside.std() > 0:\n            return r.mean() / downside.std() * np.sqrt(periods_per_year)\n        else:\n            return np.inf if r.mean() > 0 else 0\n\n    def omega(r):\n        gains = r[r > p] - p\n        losses = p - r[r < p]\n        return gains.sum() / losses.sum() if losses.sum() > 0 else np.nan\n\n    def max_dd(r):\n        cum = (1 + r).cumprod()\n        dd = (cum - cum.cummax()) / cum.cummax()\n        return dd.min()\n\n    def calmar(r):\n        a = ann_return(r)\n        m = max_dd(r)\n        return a / abs(m) if m < 0 else np.nan\n\n    def expected_crra(r):\n        x = 1 + r\n        if eta == 1:\n            return np.log(x).mean()\n        else:\n            return ((x**(1 - eta) - 1) / (1 - eta)).mean()\n\n    def fisher_skew(r):\n        return skew(r, bias=False)\n\n    def pearson_skew(r):\n        mu, med, std = r.mean(), r.median(), r.std()\n        return 3 * (mu - med) / std if std > 0 else np.nan\n\n    def ex_kurt(r):\n        return kurtosis(r, fisher=True, bias=False)\n\n    metrics = {\n        'Annualized Return': ann_return(returns),\n        'Annualized Volatility': ann_vol(returns),\n        'Sharpe Ratio': sharpe(returns),\n        'Sortino Ratio': sortino(returns),\n        'Omega Ratio': omega(returns),\n        'Max Drawdown': max_dd(returns),\n        'Calmar Ratio': calmar(returns),\n        'Expected CRRA': expected_crra(returns),\n        'Fisher Skewness': fisher_skew(returns),\n        'Pearson Skewness': pearson_skew(returns),\n        'Excess Kurtosis': ex_kurt(returns),\n    }\n    return metrics\n\n# 예시 사용:\n# 만약 재조정 주기가 '6M'이면, periods_per_year=2, '12M'이면 1, '1M'이면 12 등을 전달.\n# 예: monthly returns 시, evaluate_performance(returns, periods_per_year=12)\n\n# 벤치마크 포트폴리오 들의 Excess return (i.e. return - r_f) 계산 \ndef subtract_rf_from_df(df, ff3, date_col='date'):\n    \"\"\"\n    df: 날짜와 수익률 데이터를 포함하는 DataFrame. \n        날짜 컬럼 이름은 기본적으로 'date'로 가정합니다.\n    ff3: ff3 데이터프레임, 'date'와 'r_f' 컬럼을 포함해야 합니다.\n    date_col: 날짜 컬럼의 이름 (기본값 'date').\n    \n    df의 모든 숫자형 수익률 컬럼(날짜 컬럼 제외)에서 ff3의 r_f 값을 해당 날짜에 맞게 차감합니다.\n    \"\"\"\n    # 날짜 컬럼을 datetime으로 변환\n    df[date_col] = pd.to_datetime(df[date_col])\n    ff3['date'] = pd.to_datetime(ff3['date'])\n    \n    # ff3의 r_f 컬럼만 추출 후, 날짜 기준으로 병합\n    merged = df.merge(ff3[[date_col, 'r_f']], on=date_col, how='left')\n    \n    # 날짜와 r_f를 제외한 모든 숫자형 컬럼에 대해 r_f를 차감\n    numeric_cols = merged.select_dtypes(include='number').columns.tolist()\n    # 만약 날짜 컬럼이 숫자형으로 인식될 경우, 제거\n    if date_col in numeric_cols:\n        numeric_cols.remove(date_col)\n    if 'r_f' in numeric_cols:\n        numeric_cols.remove('r_f')\n        \n    for col in numeric_cols:\n        merged[col] = merged[col] - merged['r_f']\n        \n    # r_f 컬럼은 제거\n    return merged.drop(columns='r_f')\n\npre_index_excess  = subtract_rf_from_df(pre_index, ff3, date_col='date')\npost_index_excess = subtract_rf_from_df(post_index, ff3, date_col='date')\npost_ff_excess    = subtract_rf_from_df(post_ff, ff3, date_col='date')\n\n```\n\nA core pillar of traditional asset pricing theory posits that investors are compensated for bearing systematic risk. Higher expected returns are assumed to reflect higher exposures to non-diversifiable shocks. This logic extends into the literature linking **market power** to **expected return**: dominant firms with pricing power and barriers to entry may generate higher profit margins, which are viewed as justifying higher long-run returns, albeit at the cost of greater cyclicality or factor sensitivity.\n\nHowever, the **Too Big to Fail (TBTF)** framework challenges this equilibrium-based view by demonstrating that the structural dominance of mega-cap firms yields not only **comparable or higher average returns**, but also **consistently lower volatility**. Our empirical analysis reveals that:\n\n- The top-ranked firms (e.g., top 10% by market cap) consistently generate **higher median returns** with **narrower return distributions**, virtually eliminating downside outliers post-2010.\n\n\n```{python}\n# 성과 지표 평가\nperformance = evaluate_performance(pre_index_excess['^NDX'], eta=3, p=0.01)\nperformance\n```\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Pre-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='pre-2010')\n```\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Post-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='post-2010')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Pre-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2000-01-01', end_date='2009-12-31')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Post-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2010-01-01', end_date='2023-12-31')\n```\n\nThis figure compares the monthly return distribution of the TBTF portfolio and the market-wide index (e.g., SPY or VTI) during the post-2010 period. TBTF returns are notably less dispersed and exhibit a thicker concentration around the mean.\n\nIn this context, we propose a reframed interpretation:\n\n> Market power no longer demands a risk premium—it precludes the risk itself.\n\nTo formalize this intuition, we treat:\n- **log(capshare)** as a proxy for forward-looking return potential, reflecting capital markets' implicit confidence in dominant firms,\n- and **percentile-based rank** (e.g., within top-𝑛 assets) as a proxy for structural market power.\n\nThe estimated relationship between rank and log(capshare) is **strongly convex**, best approximated by an **exponential function**. This convexity implies that **small changes in rank yield disproportionate shifts in capital allocation**, consistent with a **winner-takes-most** dynamic.\n\nWhile prior studies (e.g., Hou et al., 2015; Bai et al., 2019) posit that higher expected returns arise as compensation for firm-level productivity or intangible capital risk, our results suggest an alternative mechanism: persistent capital lock-in due to passive flows, platform effects, and institutional mandates.\n\nThis reorientation invites a broader philosophical reframing:  \nTBTF stocks do not merely command a premium for bearing risk—they accumulate rents by **removing risk** through their institutional embeddedness.\n\nIn contrast to traditional convex pricing models where **market competition disciplines excess returns**, the TBTF structure implies a regime of **quasi-feudal rent extraction**, where **market power ensures return, not through risk, but through insulation**.\n\n\n## Risk-Adjusted Performance Metrics\n\nWe evaluate the TBTF strategy against standard benchmarks using several key performance metrics: Sharpe ratio, Sortino ratio, Omega ratio, maximum drawdown, and CRRA utility. All metrics are computed over the out-of-sample post-2010 period.\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Pre-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='pre-2010')\n```\n\n```{python}\n#| fig-cap: \"Monthly Return Distribution of TBTF vs. Broader Market (Post-2010)\"\nplot_return_distribution(tbtf_returns, market_returns, period='post-2010')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Pre-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2000-01-01', end_date='2009-12-31')\n```\n\n```{python}\n#| fig-cap: \"Price Level Comparison: TBTF vs. Market (Post-2010)\"\nplot_price_level(tbtf_returns, market_returns, start_date='2010-01-01', end_date='2023-12-31')\n```\n\n\nThe TBTF portfolio consistently outperforms across all dimensions, with both higher average returns and lower downside risk exposure. Notably, its Omega ratio remains significantly above 1 for low thresholds, reflecting extremely thin left tails.\n\n\n## Clarification on Distributional Decomposition\n\nAlthough the intuition behind TBTF's superior return profile is deeply tied to changes in distributional dynamics, we emphasize that the Gaussian Mixture decomposition, transition matrix estimation, and stationary state analysis are fully addressed in [Section 4](4_4_structure.qmd). Readers seeking formal modeling of return asymmetry, regime persistence, or long-run capital concentration should refer to that section.\n\nIn this performance section, we instead emphasize practical backtest results and the empirical coherence of TBTF’s return superiority, without over-relying on latent structure estimation.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"number-sections":false,"output-file":"4_6_performance.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","author":"gitSAM","date":"2025-03-31","bibliography":["references.bib"],"jupyter":"python3","theme":"cosmo","title":"06 Performance"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}