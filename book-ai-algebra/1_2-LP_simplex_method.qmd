---
title: How to Solve LP
---

## Production Planning Problem

### Problem statement

A factory produces two products, A and B.

- Each unit of product A requires 3 hours of machine time, and product B requires 2 hours. The total available machine time per day is 180 hours.
- Product A requires 2 kg of raw material per unit, and product B requires 3 kg. The total available raw material is 160 kg.
- Profit per unit is $\$$ 50 for product A and $\$$40 for product B.

Goal: Determine the production quantities of A and B that maximize profit without exceeding the resource constraints.

### Formulate the problem

**Variables**:  

Let  
$x$ = units of product A  
$y$ = units of product B

**Objective** function:  

Maximize
$$Z = 50x + 40y$$

Subject to the constraints:

$$\begin{cases} 3x + 2y \leq 180 & \text{(machine time)} \\ 2x + 3y \leq 160 & \text{(raw material)} \\ x \geq 0,\quad y \geq 0 & \text{(non-negativity)} \end{cases}$$

## Solve with Python and Interpret


```{python}

import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import linprog

# Objective function coefficients (we minimize -Z for maximization)
c = [-50, -40]

# Inequality constraints (Ax <= b)
A = [
    [3, 2],   # Machine time
    [2, 3]    # Raw material
]
b = [180, 160]

# Variable bounds
x_bounds = (0, None)
y_bounds = (0, None)

# Solve using linprog
res = linprog(c, A_ub=A, b_ub=b, bounds=[x_bounds, y_bounds], method='highs')

# Extract results
x_opt, y_opt = res.x
z_opt = -res.fun  # remember we minimized -Z

# Create a grid for plotting
x = np.linspace(0, 80, 400)
y1 = (180 - 3 * x) / 2  # from 3x + 2y <= 180
y2 = (160 - 2 * x) / 3  # from 2x + 3y <= 160

# Plotting
plt.figure(figsize=(8, 6))
plt.plot(x, y1, label=r'$3x + 2y \leq 180$')
plt.plot(x, y2, label=r'$2x + 3y \leq 160$')
plt.xlim(0, 80)
plt.ylim(0, 80)

# Fill feasible region
y1_clip = np.minimum(y1, y2)
y1_clip = np.where((y1_clip >= 0) & (y1 >= 0) & (y2 >= 0), y1_clip, np.nan)
plt.fill_between(x, 0, y1_clip, where=~np.isnan(y1_clip), color='gray', alpha=0.3)

# Plot optimal point
plt.plot(x_opt, y_opt, 'ro', label='Optimal Solution')
plt.text(x_opt + 1, y_opt, f'({x_opt:.2f}, {y_opt:.2f})\nProfit = ${z_opt:.2f}', color='red')

plt.xlabel('Product A (x)')
plt.ylabel('Product B (y)')
plt.title('Feasible Region and Optimal Production Plan')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

x_opt, y_opt, z_opt

```

### Optimal Solution:

* Quantity of product A: $x = 44$ units
* Quantity of product B: $y = 24$ units
* Maximum profit: $Z = 3160$

### Interpretation:

* Given the constraints on machine hours and raw materials, this production combination yields the **maximum attainable profit** among all feasible solutions. The **shaded region** in the graph represents the **feasible region**, and the **red point** indicates the **optimal production plan**.
* Since the optimal solution occurs at the intersection of two binding constraints, this problem exemplifies a **classical linear programming (LP) formulation** in which the solution lies at a **vertex of the feasible polytope**.

