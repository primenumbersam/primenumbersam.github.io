{"title":"Industry CAPM","markdown":{"yaml":{"title":"Industry CAPM","subtitle":"Time-Varying Risk and Mispricing (1999–2023)","author":"gitSAM","date":"2025-03-23","abstract":"This study investigates the empirical validity of the single-factor Capital Asset Pricing Model (CAPM) at the industry level using monthly data from 1999 to 2023. Employing value-weighted returns across ten industry portfolios, we assess the time variation in market betas, the uncertainty of estimated risk premiums, and the magnitude of conditional pricing errors. Our findings reveal substantial instability in beta estimates, statistically insignificant market risk premia, and persistent alpha deviations—indicating that CAPM omits key structural factors in explaining cross-sectional return differences. These results question the model's robustness as a tool for cost of equity estimation and portfolio construction.","keywords":"beta instability, Fama-MacBeth regression, security market line, conditional alpha, mispricing","format":{"html":{"code-fold":true,"toc":true}},"jupyter":"python3"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nThis study investigates the empirical validity of the **single-factor Capital Asset Pricing Model (CAPM)** when applied to **value-weighted industry portfolios** over a multi-decade horizon (1999–2023). While the CAPM remains a foundational model in asset pricing theory, its assumptions—such as **static equilibrium** and **constant risk loadings (betas)**—may be unrealistic in dynamic, evolving markets. In this context, we assess whether the model adequately explains cross-sectional return differences at the industry level.\n\nWe focus on three core empirical challenges:\n1. The **time-variation in industry-specific market betas**, which undermines the model’s assumption of stable covariance structures.\n2. The **uncertainty in estimating the market risk premium**, which can distort expected returns and cost-of-capital estimations.\n3. The **presence of persistent pricing errors (alphas)** that suggest structural mispricing and potentially omitted risk factors.\n\nOur approach draws on the empirical framework pioneered by Fama and French (1997), extended with contemporary data and methods. Using firm-level CRSP data and SIC-based industry classification, we construct monthly value-weighted portfolios and implement **rolling beta estimations**, **cross-sectional regressions**, and **alpha decomposition** to evaluate the model’s performance.\n\n**References**:\n\n- Fama, Eugene F., and Kenneth R. French. “Industry costs of equity.” *Journal of Financial Economics* 43.2 (1997): 153–193.  \n- Fama-French Data Library. CRSP and SIC Classification Methodologies.  \n\n## Data and Methodology\n- **Data Source:**\n  - CRSP: Monthly time-series market capitalization data for public stocks listed on Nasdaq, NYSE, and AMEX from 1994-01 to 2023-12.\n  - Fama-French Data Library: Market excess returns (Rm-Rf) and one-month Treasury bill rates as the proxy for the risk-free rate.\n\n- **Time Frequency and Period:** Monthly, covering 30 years (1994-01 to 2023-12), utilizing 5-year rolling windows to estimate monthly industry-specific betas (initial estimation starts from 1999-02).\n\n- **Industry Classification:** Ten major industries defined based on SIC codes:\n  - Agriculture, Mining, Construction, Manufacturing, Transportation, Utilities, Wholesale, Retail, Finance, and Services.\n  - Adjustment[^1]: Reclassified 'Public' to 'Service', excluded 'Missing'.\n\n[^1]: In this study, firms originally categorized under the “Public” industry in the CRSP database are reassigned to the “Services” industry group. This decision is based on a review of the largest firms within the Public category—such as Tesla, Zoom, Airbnb, PayPal, and Coinbase—which predominantly operate in service-driven, software-based, or platform-oriented business models. Although a few firms like Tesla or Kraft Heinz engage in manufacturing, the overall structure and revenue sources of the Public group are better aligned with the characteristics of modern service industries. This reassignment enhances interpretability in CAPM-based industry comparisons while maintaining consistency in economic logic.\n\n## Model Specification\nThe single-factor CAPM model used: \n\n$$\n(E[r_i] - r_f)=  \\alpha_i + \\beta_i (E[r_m] - r_f)\n$$\n\nWhere:\n\n-   $E[r_i]$: Time-averaged return (i.e., realized net growth rate) of industry portfolio ( i )\n-   $r_f$: Time-averaged return of the risk-free asset (e.g., one-month T-bill)\n-   $E[r_m]$: Time-averaged return of the **market portfolio**, defined as a **value-weighted convex combination** of all industry portfolios\n-   $\\beta_i$: Industry-specific market beta, representing the **linear projection coefficient** onto the market excess return under a single-factor model. It is traditionally assumed to be constant under static equilibrium conditions.\n-   $\\alpha_i$: **Orthogonal component** of the industry portfolio's return relative to the market factor; equivalently, the **mean residual from an orthogonal projection** onto the market return. This term captures either pricing errors under CAPM or the effects of omitted risk factors.\n\n### The Alpha\nThe interpretation of $\\alpha_i$ aligns with the residual term in the linear projection:\n \n$$\nr_i - r_f = \\alpha_i + \\beta_i (r_m - r_f) + \\varepsilon_i\n$$ \n\nwhere $\\alpha_i$ is the average component of $\\varepsilon_i$, and $\\varepsilon_i$ is orthogonal to the regressor. Under ideal CAPM assumptions, $\\alpha_i = 0$, but empirically it often deviates from zero due to model misspecification or omitted risk factors.\n\n### Simple Logical Analysis\nTo better understand the structural dynamics behind industry-driven market behavior, we consider two stylized scenarios:\n\n- First, imagine a situation where a single dominant industry—such as Services—accounts for a disproportionately large share of total market capitalization (e.g., 70%). In this case, the market portfolio, defined as a value-weighted aggregate, would exhibit a very high linear correlation with the dominant industry's return. This undermines diversification and implies that market-wide movements are largely driven by a single sector.\n\n- Second, consider a scenario where two large industries, each accounting for ~45% of the market, are perfectly negatively correlated. Such a structure would lead to very low overall market volatility, as gains in one sector would offset losses in the other, thus creating strong hedging opportunities and enhancing the benefits of diversification.\n\nIn reality, however, the two industries that collectively dominate the market—Services and Manufacturing—exhibit strong positive correlation. As a result, market volatility is amplified, and hedging opportunities are limited, especially in passive value-weighted portfolios. This concentration and correlation structure challenge one of CAPM's implicit assumptions: that the market portfolio is a well-diversified proxy for systematic risk.\n\n## From 1999 to 2023\n\n### Historical excess risk premiums of the US stock market\n\n```{python}\n# 30 years of crsp_monthly\n# start_date = \"1994-01-31\" # i.e. '1994-02-01'\n# end_date = \"2023-12-31\"\n\n# Because of 5 year rolling estimation of monthly beta\nstart_date = \"1999-01-31\"\nend_date = \"2023-12-31\"\n\nprint(f\"Start Date: {start_date}\")\nprint(f\"End Date: {end_date}\")\n```\n\n\n```{python}\n#@title Libraries and Time-window\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.formula.api as smf\n\nimport sqlite3\n\ntidy_finance = sqlite3.connect(\"../../colab/tidy_finance_python.sqlite\")\n\nfactors_ff3_monthly = pd.read_sql_query(\n  sql=\"SELECT month, mkt_excess, rf FROM factors_ff3_monthly\",\n  con=tidy_finance,\n  parse_dates={\"month\"}\n)\n\n# 1994-01-01 indicates mktcap at 1994-01-31 which is the start date\n# the first return is calculated\ncrsp_monthly = pd.read_sql_query(\n  sql=\"SELECT permno, month, ret, ret_excess, mktcap, mktcap_lag, siccd, industry, exchange FROM crsp_monthly\",\n  con=tidy_finance,\n  parse_dates={\"month\"}\n)\n\n# 5 year rolling estimated beta is available from 1999-01-01\nbeta = (pd.read_sql_query(\n    sql=\"SELECT permno, month, beta_monthly FROM beta\",\n    con=tidy_finance,\n    parse_dates={\"month\"})\n)\n\nbeta_lag = (beta\n  .assign(month = lambda x: x[\"month\"] + pd.DateOffset(months=1))\n  .get([\"permno\", \"month\", \"beta_monthly\"])\n  .rename(columns={\"beta_monthly\": \"beta_lag\"})\n  .dropna()\n)\n\n# Calculate 12-month moving average\nfactors_ff3_monthly['mkt_excess_ma12'] = factors_ff3_monthly['mkt_excess'].rolling(window=12).mean()\n\n# Plot: Market Excess Return with 12-month Moving Average\nplt.figure(figsize=(12, 5))\nplt.plot(factors_ff3_monthly['month'], factors_ff3_monthly['mkt_excess'], label='Monthly Excess Return', color='lightsteelblue')\nplt.plot(factors_ff3_monthly['month'], factors_ff3_monthly['mkt_excess_ma12'], label='12-Month Moving Average', color='darkblue')\nplt.axhline(0, color='gray', linestyle='--', linewidth=1)\nplt.title('Monthly Market Excess Return with 12-Month Moving Average', fontsize=14)\nplt.xlabel('Date')\nplt.ylabel('Excess Return')\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\n```\n\n\n### Structural Shifts in Industry Concentration\n- Inter-Industry Divergence: Growing disparity in concentration levels across industries\n- Intra-Industry Consolidation: Increasing dominance of top firms within each industry\n\n```{python}\n#@title Number of Firms in Industry Portfolios\n# First, create a dummy column for counting\ncrsp_monthly['count'] = 1\n\n# Create the pivot table\npfo_number = crsp_monthly.pivot_table(\n    values='count',  # The column to aggregate (count in this case)\n    index='month',    # The column to use as index\n    columns='industry', # The column to use as columns\n    aggfunc='sum',    # The aggregation function to use (sum in this case)\n    fill_value=0      # Fill NaN values with 0\n)\n\nsorted_columns = pfo_number.mean().sort_values(ascending=False).index\npfo_number[sorted_columns].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='number of firms',\n    title='Number of Firms in Industry'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0)) # legend outside\nplt.show()\n\npfo_number[['Missing','Public']].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='number of firms',\n    title='Number of Firms in Industry'\n)\nplt.show()\n\nprint('The average number of firms in Missing industry is', pfo_number['Missing'].mean().round(2))\n```\n\n```{python}\n#@title Industry Concentration Dynamics\n\n# Average Firm Size in Industry Portfolios (Public in Black)\n\npfo_size = crsp_monthly.pivot_table(\n    index='month',\n    columns='industry',\n    values='mktcap',\n    aggfunc='mean'\n)\n\nsorted_columns = pfo_size.mean().sort_values(ascending=False).index\n\nax = pfo_size[sorted_columns].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='mktcap',\n    title='Average Firm Size in Industry Portfolios',\n    linewidth=1.5\n)\n\n# Set Public line to black\nfor line, col in zip(ax.get_lines(), sorted_columns):\n    if col == \"Public\":\n        line.set_color('black')\n        line.set_linewidth(2.0)\n\nplt.legend(bbox_to_anchor=(1.0, 1.0))  # legend outside\nplt.show()\n```\n\n\n```{python}\n#@title 산업 내 HHI (Herfindahl-Hirschman Index)\n\n# Step 1: 각 월, 각 산업 내 기업별 시가총액 비중 계산\ncrsp_monthly['mktcap_share'] = (\n    crsp_monthly\n    .groupby(['month', 'industry'], group_keys=False)['mktcap']\n    .transform(lambda x: x / x.sum())\n)\n\n# Step 2: HHI 계산 (각 산업의 각 월에 대해)\nindustry_hhi = (\n    crsp_monthly\n    .assign(mktcap_share_sq=lambda x: x['mktcap_share'] ** 2)\n    .groupby(['month', 'industry'], group_keys=False)['mktcap_share_sq']\n    .sum()\n    .unstack()\n    .sort_index()\n)\n\n# 산업 내 Top-5 Market Cap Share 계산 \ndef top5_share_func(df):\n    # group에는 'month', 'industry'가 포함되므로 사용하지 않음\n    top5_sum = df.nlargest(5, 'mktcap')['mktcap'].sum()\n    total = df['mktcap'].sum()\n    return top5_sum / total if total != 0 else np.nan\n\n# Step: 그룹핑 컬럼을 index로 빼서 apply의 group에서 제거\ntop5_share = (\n    crsp_monthly\n    .sort_values(['month', 'industry', 'mktcap'], ascending=[True, True, False])\n    .set_index(['month', 'industry'])  # <-- group에 포함되지 않게 index로 설정\n    .groupby(['month', 'industry'], group_keys=False)\n    .apply(top5_share_func)  # group에 month/industry 포함되지 않음\n    .unstack()  # 산업별 column\n    .sort_index()\n)\n\nselected_industries = ['Transportation', 'Utilities', 'Retail', 'Manufacturing', 'Services']\n\n# HHI plot\nindustry_hhi[selected_industries].plot(\n    figsize=(12, 5),\n    title='HHI: Industry Concentration Over Time',\n    ylabel='Herfindahl Index',\n    xlabel='Month'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0))\nplt.show()\n\n# Top-5 Share plot\ntop5_share[selected_industries].plot(\n    figsize=(12, 5),\n    title='Top-5 Market Cap Share in Each Industry Over Time',\n    ylabel='Top-5 Share',\n    xlabel='Month'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0))\nplt.show()\n```\n\nThe sharp increase in Top-5 market capitalization share since the post-2009 period highlights a structural shift toward greater industry concentration—particularly within the transportation, utilities, retail, manufacturing, and services sectors. This trend indicates that a small number of dominant firms increasingly account for a disproportionate share of total industry market value.\n\nWhile average firm size already suggested this pattern, the Top-5 share offers a direct and quantifiable measure. Notably, the Services sector has experienced a persistent rise in concentration since 2011, likely driven by digital transformation, platform-based business models, and network effects. The Manufacturing sector, meanwhile, remained relatively stable until 2019 before undergoing a rapid increase in dominance, possibly due to technology-driven scale economies.\n\nThese developments coincide with macroeconomic shifts following the 2008 financial crisis, including accommodative policies like quantitative easing (QE), which may have reinforced the \"winner-takes-most\" dynamics. Importantly, this rising concentration may partially explain observed deviations from CAPM predictions, as industry-level returns become increasingly shaped by a few large-cap firms with idiosyncratic risk-return profiles.\n\n### Evolution of Industry Market Cap Shares (1999–2023)\n```{python}\n#@title df: Drop industry 'Missing' and Re-classify industry 'Public' to 'Services'\n\n# Copy original\ndf = crsp_monthly.copy()\n\n# Drop Missing\ndf = df[df['industry'] != 'Missing']\n\n# Reclassify Public → Services\ndf.loc[df['industry'] == 'Public', 'industry'] = 'Services'\n\n# Merge with factor data and beta\ndf = (df\n  .merge(beta, how=\"inner\", on=[\"permno\", \"month\"])\n  .merge(beta_lag, how=\"inner\", on=[\"permno\", \"month\"])\n  .merge(factors_ff3_monthly, how=\"inner\", on=[\"month\"])\n)\n```\n\n```{python}\n#@title Market Cap Share of industry portfolios\npfo_share = df.pivot_table(index='month', columns='industry', values='mktcap', aggfunc='sum')\n\n# Normalize pfo_share to sum to 1 for each row\npfo_share[:] = pfo_share.div(pfo_share.sum(axis=1), axis=0)\n\nsorted_columns = pfo_share.mean().sort_values(ascending=False).index\npfo_share[sorted_columns].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='mktcap',\n    title='Market Cap Share of industry portfolios'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0)) # legend outside\nplt.show()\n```\n\nThe market portfolio’s composition—measured by the value-weighted market capitalization share of each industry—has experienced notable structural changes since 1999. While the majority of industries have remained relatively small in terms of aggregate market weight, three sectors—**Manufacturing, Services, and Finance**—have consistently dominated.\n\nIn particular, the **Manufacturing** sector's dominance has gradually declined from nearly 50% in 1999 to below 40% in 2023. Conversely, the **Services** sector, especially after absorbing \"Public\" firms, has expanded significantly, rising from under 20% to over 30% in the same period. The **Finance** sector saw a sharp decline following the 2008 financial crisis and has since stabilized at a lower level.\n\nThese compositional shifts reflect evolving patterns in industrial dominance and have direct implications for the **systematic risk profile** of the aggregate market portfolio. As sectoral weights change, so too does the market beta composition underlying the CAPM framework.\n\n### Time-Varying Systematic Risk by Industry\n\n```{python}\n#@title Time-varying industry Market Betas\n\n# ===============================================\n# 1. Market Cap-weighted Industry Beta (Value-Weighted Beta)\n# ===============================================\n# CAPM의 factor loading인 beta는 산업 내 대형 기업일수록 시장과의 공분산에 더 큰 영향을 미치므로,\n# 산업별 단순 평균 beta는 산업의 실제 systematic risk를 과소/과대평가할 수 있습니다.\n# 따라서 각 기업의 시가총액으로 가중평균한 value-weighted beta를 계산합니다.\n\n# Step 1: Beta weighted by market cap\ndf['beta_weighted'] = df['beta_monthly'] * df['mktcap']\n\n# Step 2: Group by month and industry to compute weighted beta\npfo_beta_weighted = (\n    df.groupby(['month', 'industry'])[['beta_weighted', 'mktcap']]\n      .sum()\n      .assign(beta_vw=lambda x: x['beta_weighted'] / x['mktcap'])\n      .reset_index()\n      .pivot(index='month', columns='industry', values='beta_vw')\n)\n\n# ===============================================\n# 2. Time-Series Plot of Value-Weighted Industry Betas\n# ===============================================\nsorted_columns = pfo_beta_weighted.mean().sort_values(ascending=False).index\n\npfo_beta_weighted[sorted_columns].plot(\n    kind='line',\n    figsize=(12, 6),\n    xlabel='Month',\n    ylabel='Value-weighted Beta',\n    title='Time-varying Value-weighted Industry Beta'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0))\nplt.show()\n\n# ===============================================\n# 3. Boxplot of Value-Weighted Industry Betas\n# ===============================================\n# Melt for seaborn\npfo_beta_weighted_melted = pd.melt(\n    pfo_beta_weighted.reset_index(),\n    id_vars=['month'],\n    value_vars=pfo_beta_weighted.columns\n)\npfo_beta_weighted_melted.columns = ['month', 'industry', 'beta']\n\n# Sort industries by average beta\nmean_beta_vw = pfo_beta_weighted_melted.groupby('industry')['beta'].mean().sort_values(ascending=False)\n\n# Boxplot\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    y='industry',\n    x='beta',\n    data=pfo_beta_weighted_melted,\n    order=mean_beta_vw.index,\n    orient='h'\n)\nplt.title('Boxplot of Value-weighted Beta for Each Industry (Sorted by Mean)')\nplt.show()\n\n# ===============================================\n# 4. Scatter Plot: Mean Beta vs. Mean Market Cap Share\n# ===============================================\n# Mean industry beta (value-weighted)\nbeta_mean = pfo_beta_weighted.mean()\n\n# Mean market cap share (already normalized)\nmktcap_share_mean = pfo_share.mean()\n\n# Scatter Plot\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=beta_mean, y=mktcap_share_mean)\nfor industry in beta_mean.index:\n    plt.text(beta_mean[industry], mktcap_share_mean[industry], industry, fontsize=9)\nplt.xlabel('Mean Industry Beta (Value-weighted)')\nplt.ylabel('Mean Market Cap Share')\nplt.title('Mean Industry Beta vs. Mean Market Cap Share')\nplt.grid(True)\nplt.show()\n```\n\nAnalysis of **value-weighted industry betas** uncovers several important dynamics in the evolution of systematic risk exposures across sectors.\n\nFirst, the time-series plot shows a **random-walk-like behavior** in beta trajectories, suggesting that industry-level risk exposure is far from stable and must be modeled as time-varying. The boxplot reinforces this heterogeneity:  \n\n- Industries such as **Manufacturing** and **Retail** exhibit narrow beta distributions, indicating consistent risk exposure among firms in these sectors.  \n- In contrast, **Mining** and **Construction** show wide dispersion, pointing to greater intra-industry variability in systematic risk.\n\nA comparison of beta levels also reveals structural asymmetries:  \n\n- **Retail**, **Utilities**, and **Agriculture** maintain beta values consistently **below one**, aligning with their roles as defensive sectors.  \n- Conversely, the **Services** sector displays beta values **above one**, along with a rising market cap share—suggesting it has become a key driver of market returns.\n\nThis imbalance implies that a value-weighted market portfolio—heavily exposed to high-beta sectors—offers **limited hedging potential**, especially in downturns.  \nThe scatter plot of **mean beta vs. mean market cap share** further illustrates this, with Manufacturing standing out as a structural outlier: it holds an average beta near 1 but dominates in market share.  These findings support a more **strategic allocation to low-beta sectors**, particularly in anticipation of macroeconomic risks. This aligns with recent investment behavior by Buffett, who has increased exposure to retail-sector firms like Ulta Beauty, likely as a hedge against cyclical downturns.\n\n\n### Empirical Testing of CAPM Using Fama-MacBeth Regressions\n\n```{python}\n#@title 10 Value-Weighted industry pfos\n\ndef weighted_avg(x, weights):\n    \"\"\"Calculates the weighted average of a series.\"\"\"\n    return np.average(x, weights=weights)\n\n# Apply weighted_avg function to pivot_table\npfo_vw_ret_excess = df.pivot_table(\n    index='month',\n    columns='industry',\n    values='ret_excess',\n    aggfunc=lambda x: weighted_avg(x, df.loc[x.index, 'mktcap'])\n)\n\npfo_vw_beta_lag = df.pivot_table(\n    index='month',\n    columns='industry',\n    values='beta_lag',\n    aggfunc=lambda x: weighted_avg(x, df.loc[x.index, 'mktcap'])\n)\n\nmean_vw_beta_lag = pfo_vw_beta_lag.mean().rename('mean_beta_lag')\nmean_vw_ret_excess = pfo_vw_ret_excess.mean().rename('mean_ret_excess')\n\nmkt_excess = factors_ff3_monthly['mkt_excess'].mean()\nrf = factors_ff3_monthly['rf'].mean()\n```\n\n```{python}\n#@title Cross-sectional regressions for each month\n\n# Fama-MacBeth (1973) two-pass procedure \n\nrisk_premiums = (df\n  .groupby(\"month\")[['ret_excess', 'beta_lag']]\n  .apply(lambda x: smf.ols(formula=\"ret_excess ~ beta_lag\", data=x).fit().params)\n  .reset_index()\n)\n\n# Time-series Aggregation (i.e. average)\n# average across the time-series dimension to get the mean risk premium for each characteristic\n# calculate t-test statistics for each regressor,\n# critical values of 1.96 (at 5% significance) or 2.576 (at 1% significance) for two-tailed significance tests\n\nmean_premiums = (risk_premiums\n  .melt(id_vars=\"month\", var_name=\"factor\", value_name=\"estimate\")\n  .groupby(\"factor\")[\"estimate\"]\n  .apply(lambda x: pd.Series({\n      \"mean_premium\": 100*x.mean(),\n      \"t_statistic\": x.mean()/x.std()*np.sqrt(len(x))\n    })\n  )\n  .reset_index()\n  .pivot(index=\"factor\", columns=\"level_1\", values=\"estimate\")\n  .reset_index()\n)\n\n# reporting standard errors of risk premiums, after adjusting for autocorrelation (Newey and West (1987) standard errors)\n\nmean_premiums_newey_west = (risk_premiums\n  .melt(id_vars=\"month\", var_name=\"factor\", value_name=\"estimate\")\n  .groupby(\"factor\")\n  .apply(lambda x: (\n      x[\"estimate\"].mean()/\n        smf.ols(\"estimate ~ 1\", x)\n        .fit(cov_type=\"HAC\", cov_kwds={\"maxlags\": 6}).bse\n    ), include_groups=False\n  )\n  .reset_index()\n  .rename(columns={\"Intercept\": \"t_statistic_newey_west\"})\n)\n\nfm_reg = (mean_premiums\n  .merge(mean_premiums_newey_west, on=\"factor\")\n  .round(3)\n)\nfm_reg['mean_premium'] = fm_reg['mean_premium']*12\n\nprint('Annual Risk Premium of Market Beta')\nfm_reg\n```\n\nWe employ the **Fama-MacBeth (1973) two-pass regression method** to estimate the annualized market risk premium under the single-factor CAPM framework. The first pass consists of estimating rolling betas for each firm, which are then aggregated into value-weighted industry betas. The second pass involves running monthly cross-sectional regressions of industry excess returns on lagged betas from 1999 to 2023. To account for possible serial correlation, we report both naïve t-statistics and Newey-West (1987) adjusted statistics.\n\nThe results show a striking pattern:  \n\n- The **estimated intercept (alpha)** averages **9.43% annually**, and this deviation from the theoretical risk-free rate is **statistically significant** (t = 3.89; NW-adjusted t = 3.05).  \n- The **estimated beta risk premium**, on the other hand, is only **1.86% annually**, with **no statistical significance** (t = 0.77; NW-adjusted t = 0.73).\n\nThis finding leads to two critical implications:\n\n1. The CAPM fails to explain a substantial portion of the cross-sectional variation in industry returns.\n2. There is likely a **mispricing component or omitted factor structure** that the single-factor model cannot capture.\n\nFrom a modeling perspective, the coexistence of a strong alpha and weak beta suggests that estimation errors are compounding: both the time-varying nature of betas and the instability of risk premia contribute to the overall model misspecification. These results are consistent with the view that industry-specific risk profiles may involve multiple dimensions of risk, and that static CAPM assumptions are empirically untenable over long horizons.\n\n\n### Security Market Line and Conditional Alpha\n\n```{python}\n#@title CAPM SML prediction plot\n\nimport matplotlib.ticker as mtick\n\n# Combine beta and return\npfo_sml = pd.concat([mean_vw_beta_lag, mean_vw_ret_excess], axis=1)\npfo_sml = pfo_sml.reset_index().rename(columns={'index': 'industry'})\n\n# CAPM Regression Line (fitted to 10 points)\nmodel = smf.ols('mean_ret_excess ~ mean_beta_lag', data=pfo_sml).fit()\nintercept_capm_fit = model.params['Intercept']\n\n# SML: CAPM predicted line (Rf intercept)\nintercept_capm_theory = rf\n\n# SML: Fama-MacBeth implied line (intercept from fm_reg table)\nintercept_fm = fm_reg.loc[fm_reg['factor'] == 'Intercept', 'mean_premium'].values[0] / 100 / 12  # monthly rate\n\n# Start plot\nplt.figure(figsize=(8, 6))\n\n# Scatter plot of 10 industries\nfor _, row in pfo_sml.iterrows():\n    plt.scatter(row['mean_beta_lag'], row['mean_ret_excess'], color='black')\n    plt.annotate(row['industry'], (row['mean_beta_lag'] + 0.01, row['mean_ret_excess']), fontsize=9)\n\n# Draw SMLs\n# Theoretical CAPM SML (Rf, slope = E[Rm - Rf])\nplt.axline((0, intercept_capm_theory), slope=mkt_excess, linestyle='dashed', color='black', label='CAPM (Rf Intercept)')\n\n# Regression fit line (OLS over 10 industry points)\nplt.axline((0, intercept_capm_fit), slope=mkt_excess, linestyle='dashed', color='red', label='OLS Fit on 10 Points')\n\n# Fama-MacBeth implied line (Intercept from FM regression)\nplt.axline((0, intercept_fm), slope=mkt_excess, linestyle='dashed', color='blue', label='Fama-MacBeth Intercept')\n\n# Format\nplt.gca().yaxis.set_major_formatter(mtick.PercentFormatter(1.0))\nplt.xlabel('Mean Beta (Lagged)')\nplt.ylabel('Mean Excess Return (Monthly)')\nplt.title('Unconditional Security Market Line (Industry-Level CAPM)')\nplt.legend(loc='lower right')\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n```\n\n```{python}\n#@title 개별 산업의 mispricing 정도를 파악\n\n# 1. Calculate conditional alpha\npfo_sml['capm_pred'] = pfo_sml['mean_beta_lag'] * mkt_excess\npfo_sml['alpha'] = pfo_sml['mean_ret_excess'] - pfo_sml['capm_pred']\n\n# 2. Sort industries by alpha\npfo_sml_sorted = pfo_sml.sort_values(by='alpha', ascending=False)\n\n# 3. Barplot of alpha\nimport seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.barplot(data=pfo_sml_sorted, x='alpha', y='industry', hue='industry', palette='coolwarm', dodge=False)\nplt.axvline(0, color='black', linestyle='--')\nplt.gca().xaxis.set_major_formatter(mtick.PercentFormatter(1.0))\nplt.xlabel('Conditional Alpha (Monthly)')\nplt.title('Industry-level Conditional Alpha under CAPM')\nplt.tight_layout()\nplt.show()\n```\n\nWe visualize the **unconditional Security Market Line (SML)** implied by the single-factor CAPM across 10 value-weighted industry portfolios. Each point on the plot corresponds to an industry, placed according to its **average market beta** (horizontal axis) and **realized average excess return** (vertical axis) over the sample period.\n\nThree lines are shown for comparison:\n\n- The **black dashed line** represents the **theoretical CAPM SML**, where the intercept equals the average risk-free rate and the slope equals the average market risk premium.\n- The **red dashed line** is a simple **OLS fit** across the 10 industry points, which minimizes cross-sectional error.\n- The **blue dashed line** uses the **Fama-MacBeth estimated intercept**, incorporating pricing errors in the CAPM framework.\n\nMost industry points lie between the CAPM-predicted line and the Fama-MacBeth-adjusted line. This suggests that while the risk-return relationship remains approximately linear, the CAPM fails to account for substantial pricing errors, as reflected in large intercept terms.\n\nTo quantify these deviations more precisely, we calculate **conditional alphas** for each industry. These alphas represent the **difference between realized and CAPM-predicted returns**, conditional on the industry’s average beta.  \n\n- **Positive alpha** implies the industry earned more than predicted by its systematic risk exposure.\n- **Negative alpha** suggests overvaluation relative to CAPM expectations.\n\nThe results reveal persistent **mispricing across several sectors**, reinforcing earlier conclusions about the model’s empirical inadequacy. The CAPM may still serve as a baseline pricing model, but the presence of **large unexplained returns** calls for either a **multi-factor extension** or a fundamental rethinking of the linear risk-return paradigm.\n\n## Conclusions\n\nThis short study evaluates the empirical validity of the single-factor CAPM using value-weighted industry portfolios over a 25-year period (1999–2023). Several key findings emerge:\n\n- **Industry-specific market betas exhibit substantial time variation**, contradicting the CAPM's assumption of stable factor loadings. This instability weakens the model’s explanatory power over long horizons and complicates its use in asset pricing and cost-of-capital estimation.\n\n- The market risk premium, when estimated empirically, shows large uncertainty and wide confidence bounds, limiting its practical usefulness in capital budgeting and valuation decisions.\n\n- Fama-MacBeth regressions reveal economically large and **statistically significant intercepts (alphas)**, while the estimated risk premium on beta is both small and statistically insignificant. This suggests that the single-factor CAPM omits important pricing components or fails to capture cross-sectional return dynamics.\n\n- Industry-level CAPM predictions show **structural deviations from theoretical SML predictions**. Finance and Transportation exhibit relatively low pricing errors, potentially due to regulatory distortions (e.g., “Too Big to Fail”) or reduced market responsiveness.\n\n- Lastly, the increasing dominance of a few large-cap firms—particularly in Services and Manufacturing—implies that **market-wide returns are increasingly shaped by concentrated industry dynamics**. This structural concentration further limits the diversification benefits assumed under standard portfolio theory.\n\nOverall, while CAPM remains a foundational framework in asset pricing, this analysis highlights its limitations in capturing the complexities of modern equity markets—particularly when applied at the industry level over long horizons.\n","srcMarkdownNoYaml":"\n\n## Introduction\n\nThis study investigates the empirical validity of the **single-factor Capital Asset Pricing Model (CAPM)** when applied to **value-weighted industry portfolios** over a multi-decade horizon (1999–2023). While the CAPM remains a foundational model in asset pricing theory, its assumptions—such as **static equilibrium** and **constant risk loadings (betas)**—may be unrealistic in dynamic, evolving markets. In this context, we assess whether the model adequately explains cross-sectional return differences at the industry level.\n\nWe focus on three core empirical challenges:\n1. The **time-variation in industry-specific market betas**, which undermines the model’s assumption of stable covariance structures.\n2. The **uncertainty in estimating the market risk premium**, which can distort expected returns and cost-of-capital estimations.\n3. The **presence of persistent pricing errors (alphas)** that suggest structural mispricing and potentially omitted risk factors.\n\nOur approach draws on the empirical framework pioneered by Fama and French (1997), extended with contemporary data and methods. Using firm-level CRSP data and SIC-based industry classification, we construct monthly value-weighted portfolios and implement **rolling beta estimations**, **cross-sectional regressions**, and **alpha decomposition** to evaluate the model’s performance.\n\n**References**:\n\n- Fama, Eugene F., and Kenneth R. French. “Industry costs of equity.” *Journal of Financial Economics* 43.2 (1997): 153–193.  \n- Fama-French Data Library. CRSP and SIC Classification Methodologies.  \n\n## Data and Methodology\n- **Data Source:**\n  - CRSP: Monthly time-series market capitalization data for public stocks listed on Nasdaq, NYSE, and AMEX from 1994-01 to 2023-12.\n  - Fama-French Data Library: Market excess returns (Rm-Rf) and one-month Treasury bill rates as the proxy for the risk-free rate.\n\n- **Time Frequency and Period:** Monthly, covering 30 years (1994-01 to 2023-12), utilizing 5-year rolling windows to estimate monthly industry-specific betas (initial estimation starts from 1999-02).\n\n- **Industry Classification:** Ten major industries defined based on SIC codes:\n  - Agriculture, Mining, Construction, Manufacturing, Transportation, Utilities, Wholesale, Retail, Finance, and Services.\n  - Adjustment[^1]: Reclassified 'Public' to 'Service', excluded 'Missing'.\n\n[^1]: In this study, firms originally categorized under the “Public” industry in the CRSP database are reassigned to the “Services” industry group. This decision is based on a review of the largest firms within the Public category—such as Tesla, Zoom, Airbnb, PayPal, and Coinbase—which predominantly operate in service-driven, software-based, or platform-oriented business models. Although a few firms like Tesla or Kraft Heinz engage in manufacturing, the overall structure and revenue sources of the Public group are better aligned with the characteristics of modern service industries. This reassignment enhances interpretability in CAPM-based industry comparisons while maintaining consistency in economic logic.\n\n## Model Specification\nThe single-factor CAPM model used: \n\n$$\n(E[r_i] - r_f)=  \\alpha_i + \\beta_i (E[r_m] - r_f)\n$$\n\nWhere:\n\n-   $E[r_i]$: Time-averaged return (i.e., realized net growth rate) of industry portfolio ( i )\n-   $r_f$: Time-averaged return of the risk-free asset (e.g., one-month T-bill)\n-   $E[r_m]$: Time-averaged return of the **market portfolio**, defined as a **value-weighted convex combination** of all industry portfolios\n-   $\\beta_i$: Industry-specific market beta, representing the **linear projection coefficient** onto the market excess return under a single-factor model. It is traditionally assumed to be constant under static equilibrium conditions.\n-   $\\alpha_i$: **Orthogonal component** of the industry portfolio's return relative to the market factor; equivalently, the **mean residual from an orthogonal projection** onto the market return. This term captures either pricing errors under CAPM or the effects of omitted risk factors.\n\n### The Alpha\nThe interpretation of $\\alpha_i$ aligns with the residual term in the linear projection:\n \n$$\nr_i - r_f = \\alpha_i + \\beta_i (r_m - r_f) + \\varepsilon_i\n$$ \n\nwhere $\\alpha_i$ is the average component of $\\varepsilon_i$, and $\\varepsilon_i$ is orthogonal to the regressor. Under ideal CAPM assumptions, $\\alpha_i = 0$, but empirically it often deviates from zero due to model misspecification or omitted risk factors.\n\n### Simple Logical Analysis\nTo better understand the structural dynamics behind industry-driven market behavior, we consider two stylized scenarios:\n\n- First, imagine a situation where a single dominant industry—such as Services—accounts for a disproportionately large share of total market capitalization (e.g., 70%). In this case, the market portfolio, defined as a value-weighted aggregate, would exhibit a very high linear correlation with the dominant industry's return. This undermines diversification and implies that market-wide movements are largely driven by a single sector.\n\n- Second, consider a scenario where two large industries, each accounting for ~45% of the market, are perfectly negatively correlated. Such a structure would lead to very low overall market volatility, as gains in one sector would offset losses in the other, thus creating strong hedging opportunities and enhancing the benefits of diversification.\n\nIn reality, however, the two industries that collectively dominate the market—Services and Manufacturing—exhibit strong positive correlation. As a result, market volatility is amplified, and hedging opportunities are limited, especially in passive value-weighted portfolios. This concentration and correlation structure challenge one of CAPM's implicit assumptions: that the market portfolio is a well-diversified proxy for systematic risk.\n\n## From 1999 to 2023\n\n### Historical excess risk premiums of the US stock market\n\n```{python}\n# 30 years of crsp_monthly\n# start_date = \"1994-01-31\" # i.e. '1994-02-01'\n# end_date = \"2023-12-31\"\n\n# Because of 5 year rolling estimation of monthly beta\nstart_date = \"1999-01-31\"\nend_date = \"2023-12-31\"\n\nprint(f\"Start Date: {start_date}\")\nprint(f\"End Date: {end_date}\")\n```\n\n\n```{python}\n#@title Libraries and Time-window\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.formula.api as smf\n\nimport sqlite3\n\ntidy_finance = sqlite3.connect(\"../../colab/tidy_finance_python.sqlite\")\n\nfactors_ff3_monthly = pd.read_sql_query(\n  sql=\"SELECT month, mkt_excess, rf FROM factors_ff3_monthly\",\n  con=tidy_finance,\n  parse_dates={\"month\"}\n)\n\n# 1994-01-01 indicates mktcap at 1994-01-31 which is the start date\n# the first return is calculated\ncrsp_monthly = pd.read_sql_query(\n  sql=\"SELECT permno, month, ret, ret_excess, mktcap, mktcap_lag, siccd, industry, exchange FROM crsp_monthly\",\n  con=tidy_finance,\n  parse_dates={\"month\"}\n)\n\n# 5 year rolling estimated beta is available from 1999-01-01\nbeta = (pd.read_sql_query(\n    sql=\"SELECT permno, month, beta_monthly FROM beta\",\n    con=tidy_finance,\n    parse_dates={\"month\"})\n)\n\nbeta_lag = (beta\n  .assign(month = lambda x: x[\"month\"] + pd.DateOffset(months=1))\n  .get([\"permno\", \"month\", \"beta_monthly\"])\n  .rename(columns={\"beta_monthly\": \"beta_lag\"})\n  .dropna()\n)\n\n# Calculate 12-month moving average\nfactors_ff3_monthly['mkt_excess_ma12'] = factors_ff3_monthly['mkt_excess'].rolling(window=12).mean()\n\n# Plot: Market Excess Return with 12-month Moving Average\nplt.figure(figsize=(12, 5))\nplt.plot(factors_ff3_monthly['month'], factors_ff3_monthly['mkt_excess'], label='Monthly Excess Return', color='lightsteelblue')\nplt.plot(factors_ff3_monthly['month'], factors_ff3_monthly['mkt_excess_ma12'], label='12-Month Moving Average', color='darkblue')\nplt.axhline(0, color='gray', linestyle='--', linewidth=1)\nplt.title('Monthly Market Excess Return with 12-Month Moving Average', fontsize=14)\nplt.xlabel('Date')\nplt.ylabel('Excess Return')\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\n```\n\n\n### Structural Shifts in Industry Concentration\n- Inter-Industry Divergence: Growing disparity in concentration levels across industries\n- Intra-Industry Consolidation: Increasing dominance of top firms within each industry\n\n```{python}\n#@title Number of Firms in Industry Portfolios\n# First, create a dummy column for counting\ncrsp_monthly['count'] = 1\n\n# Create the pivot table\npfo_number = crsp_monthly.pivot_table(\n    values='count',  # The column to aggregate (count in this case)\n    index='month',    # The column to use as index\n    columns='industry', # The column to use as columns\n    aggfunc='sum',    # The aggregation function to use (sum in this case)\n    fill_value=0      # Fill NaN values with 0\n)\n\nsorted_columns = pfo_number.mean().sort_values(ascending=False).index\npfo_number[sorted_columns].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='number of firms',\n    title='Number of Firms in Industry'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0)) # legend outside\nplt.show()\n\npfo_number[['Missing','Public']].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='number of firms',\n    title='Number of Firms in Industry'\n)\nplt.show()\n\nprint('The average number of firms in Missing industry is', pfo_number['Missing'].mean().round(2))\n```\n\n```{python}\n#@title Industry Concentration Dynamics\n\n# Average Firm Size in Industry Portfolios (Public in Black)\n\npfo_size = crsp_monthly.pivot_table(\n    index='month',\n    columns='industry',\n    values='mktcap',\n    aggfunc='mean'\n)\n\nsorted_columns = pfo_size.mean().sort_values(ascending=False).index\n\nax = pfo_size[sorted_columns].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='mktcap',\n    title='Average Firm Size in Industry Portfolios',\n    linewidth=1.5\n)\n\n# Set Public line to black\nfor line, col in zip(ax.get_lines(), sorted_columns):\n    if col == \"Public\":\n        line.set_color('black')\n        line.set_linewidth(2.0)\n\nplt.legend(bbox_to_anchor=(1.0, 1.0))  # legend outside\nplt.show()\n```\n\n\n```{python}\n#@title 산업 내 HHI (Herfindahl-Hirschman Index)\n\n# Step 1: 각 월, 각 산업 내 기업별 시가총액 비중 계산\ncrsp_monthly['mktcap_share'] = (\n    crsp_monthly\n    .groupby(['month', 'industry'], group_keys=False)['mktcap']\n    .transform(lambda x: x / x.sum())\n)\n\n# Step 2: HHI 계산 (각 산업의 각 월에 대해)\nindustry_hhi = (\n    crsp_monthly\n    .assign(mktcap_share_sq=lambda x: x['mktcap_share'] ** 2)\n    .groupby(['month', 'industry'], group_keys=False)['mktcap_share_sq']\n    .sum()\n    .unstack()\n    .sort_index()\n)\n\n# 산업 내 Top-5 Market Cap Share 계산 \ndef top5_share_func(df):\n    # group에는 'month', 'industry'가 포함되므로 사용하지 않음\n    top5_sum = df.nlargest(5, 'mktcap')['mktcap'].sum()\n    total = df['mktcap'].sum()\n    return top5_sum / total if total != 0 else np.nan\n\n# Step: 그룹핑 컬럼을 index로 빼서 apply의 group에서 제거\ntop5_share = (\n    crsp_monthly\n    .sort_values(['month', 'industry', 'mktcap'], ascending=[True, True, False])\n    .set_index(['month', 'industry'])  # <-- group에 포함되지 않게 index로 설정\n    .groupby(['month', 'industry'], group_keys=False)\n    .apply(top5_share_func)  # group에 month/industry 포함되지 않음\n    .unstack()  # 산업별 column\n    .sort_index()\n)\n\nselected_industries = ['Transportation', 'Utilities', 'Retail', 'Manufacturing', 'Services']\n\n# HHI plot\nindustry_hhi[selected_industries].plot(\n    figsize=(12, 5),\n    title='HHI: Industry Concentration Over Time',\n    ylabel='Herfindahl Index',\n    xlabel='Month'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0))\nplt.show()\n\n# Top-5 Share plot\ntop5_share[selected_industries].plot(\n    figsize=(12, 5),\n    title='Top-5 Market Cap Share in Each Industry Over Time',\n    ylabel='Top-5 Share',\n    xlabel='Month'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0))\nplt.show()\n```\n\nThe sharp increase in Top-5 market capitalization share since the post-2009 period highlights a structural shift toward greater industry concentration—particularly within the transportation, utilities, retail, manufacturing, and services sectors. This trend indicates that a small number of dominant firms increasingly account for a disproportionate share of total industry market value.\n\nWhile average firm size already suggested this pattern, the Top-5 share offers a direct and quantifiable measure. Notably, the Services sector has experienced a persistent rise in concentration since 2011, likely driven by digital transformation, platform-based business models, and network effects. The Manufacturing sector, meanwhile, remained relatively stable until 2019 before undergoing a rapid increase in dominance, possibly due to technology-driven scale economies.\n\nThese developments coincide with macroeconomic shifts following the 2008 financial crisis, including accommodative policies like quantitative easing (QE), which may have reinforced the \"winner-takes-most\" dynamics. Importantly, this rising concentration may partially explain observed deviations from CAPM predictions, as industry-level returns become increasingly shaped by a few large-cap firms with idiosyncratic risk-return profiles.\n\n### Evolution of Industry Market Cap Shares (1999–2023)\n```{python}\n#@title df: Drop industry 'Missing' and Re-classify industry 'Public' to 'Services'\n\n# Copy original\ndf = crsp_monthly.copy()\n\n# Drop Missing\ndf = df[df['industry'] != 'Missing']\n\n# Reclassify Public → Services\ndf.loc[df['industry'] == 'Public', 'industry'] = 'Services'\n\n# Merge with factor data and beta\ndf = (df\n  .merge(beta, how=\"inner\", on=[\"permno\", \"month\"])\n  .merge(beta_lag, how=\"inner\", on=[\"permno\", \"month\"])\n  .merge(factors_ff3_monthly, how=\"inner\", on=[\"month\"])\n)\n```\n\n```{python}\n#@title Market Cap Share of industry portfolios\npfo_share = df.pivot_table(index='month', columns='industry', values='mktcap', aggfunc='sum')\n\n# Normalize pfo_share to sum to 1 for each row\npfo_share[:] = pfo_share.div(pfo_share.sum(axis=1), axis=0)\n\nsorted_columns = pfo_share.mean().sort_values(ascending=False).index\npfo_share[sorted_columns].plot(\n    kind='line',\n    xlabel='month',\n    ylabel='mktcap',\n    title='Market Cap Share of industry portfolios'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0)) # legend outside\nplt.show()\n```\n\nThe market portfolio’s composition—measured by the value-weighted market capitalization share of each industry—has experienced notable structural changes since 1999. While the majority of industries have remained relatively small in terms of aggregate market weight, three sectors—**Manufacturing, Services, and Finance**—have consistently dominated.\n\nIn particular, the **Manufacturing** sector's dominance has gradually declined from nearly 50% in 1999 to below 40% in 2023. Conversely, the **Services** sector, especially after absorbing \"Public\" firms, has expanded significantly, rising from under 20% to over 30% in the same period. The **Finance** sector saw a sharp decline following the 2008 financial crisis and has since stabilized at a lower level.\n\nThese compositional shifts reflect evolving patterns in industrial dominance and have direct implications for the **systematic risk profile** of the aggregate market portfolio. As sectoral weights change, so too does the market beta composition underlying the CAPM framework.\n\n### Time-Varying Systematic Risk by Industry\n\n```{python}\n#@title Time-varying industry Market Betas\n\n# ===============================================\n# 1. Market Cap-weighted Industry Beta (Value-Weighted Beta)\n# ===============================================\n# CAPM의 factor loading인 beta는 산업 내 대형 기업일수록 시장과의 공분산에 더 큰 영향을 미치므로,\n# 산업별 단순 평균 beta는 산업의 실제 systematic risk를 과소/과대평가할 수 있습니다.\n# 따라서 각 기업의 시가총액으로 가중평균한 value-weighted beta를 계산합니다.\n\n# Step 1: Beta weighted by market cap\ndf['beta_weighted'] = df['beta_monthly'] * df['mktcap']\n\n# Step 2: Group by month and industry to compute weighted beta\npfo_beta_weighted = (\n    df.groupby(['month', 'industry'])[['beta_weighted', 'mktcap']]\n      .sum()\n      .assign(beta_vw=lambda x: x['beta_weighted'] / x['mktcap'])\n      .reset_index()\n      .pivot(index='month', columns='industry', values='beta_vw')\n)\n\n# ===============================================\n# 2. Time-Series Plot of Value-Weighted Industry Betas\n# ===============================================\nsorted_columns = pfo_beta_weighted.mean().sort_values(ascending=False).index\n\npfo_beta_weighted[sorted_columns].plot(\n    kind='line',\n    figsize=(12, 6),\n    xlabel='Month',\n    ylabel='Value-weighted Beta',\n    title='Time-varying Value-weighted Industry Beta'\n)\nplt.legend(bbox_to_anchor=(1.0, 1.0))\nplt.show()\n\n# ===============================================\n# 3. Boxplot of Value-Weighted Industry Betas\n# ===============================================\n# Melt for seaborn\npfo_beta_weighted_melted = pd.melt(\n    pfo_beta_weighted.reset_index(),\n    id_vars=['month'],\n    value_vars=pfo_beta_weighted.columns\n)\npfo_beta_weighted_melted.columns = ['month', 'industry', 'beta']\n\n# Sort industries by average beta\nmean_beta_vw = pfo_beta_weighted_melted.groupby('industry')['beta'].mean().sort_values(ascending=False)\n\n# Boxplot\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    y='industry',\n    x='beta',\n    data=pfo_beta_weighted_melted,\n    order=mean_beta_vw.index,\n    orient='h'\n)\nplt.title('Boxplot of Value-weighted Beta for Each Industry (Sorted by Mean)')\nplt.show()\n\n# ===============================================\n# 4. Scatter Plot: Mean Beta vs. Mean Market Cap Share\n# ===============================================\n# Mean industry beta (value-weighted)\nbeta_mean = pfo_beta_weighted.mean()\n\n# Mean market cap share (already normalized)\nmktcap_share_mean = pfo_share.mean()\n\n# Scatter Plot\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=beta_mean, y=mktcap_share_mean)\nfor industry in beta_mean.index:\n    plt.text(beta_mean[industry], mktcap_share_mean[industry], industry, fontsize=9)\nplt.xlabel('Mean Industry Beta (Value-weighted)')\nplt.ylabel('Mean Market Cap Share')\nplt.title('Mean Industry Beta vs. Mean Market Cap Share')\nplt.grid(True)\nplt.show()\n```\n\nAnalysis of **value-weighted industry betas** uncovers several important dynamics in the evolution of systematic risk exposures across sectors.\n\nFirst, the time-series plot shows a **random-walk-like behavior** in beta trajectories, suggesting that industry-level risk exposure is far from stable and must be modeled as time-varying. The boxplot reinforces this heterogeneity:  \n\n- Industries such as **Manufacturing** and **Retail** exhibit narrow beta distributions, indicating consistent risk exposure among firms in these sectors.  \n- In contrast, **Mining** and **Construction** show wide dispersion, pointing to greater intra-industry variability in systematic risk.\n\nA comparison of beta levels also reveals structural asymmetries:  \n\n- **Retail**, **Utilities**, and **Agriculture** maintain beta values consistently **below one**, aligning with their roles as defensive sectors.  \n- Conversely, the **Services** sector displays beta values **above one**, along with a rising market cap share—suggesting it has become a key driver of market returns.\n\nThis imbalance implies that a value-weighted market portfolio—heavily exposed to high-beta sectors—offers **limited hedging potential**, especially in downturns.  \nThe scatter plot of **mean beta vs. mean market cap share** further illustrates this, with Manufacturing standing out as a structural outlier: it holds an average beta near 1 but dominates in market share.  These findings support a more **strategic allocation to low-beta sectors**, particularly in anticipation of macroeconomic risks. This aligns with recent investment behavior by Buffett, who has increased exposure to retail-sector firms like Ulta Beauty, likely as a hedge against cyclical downturns.\n\n\n### Empirical Testing of CAPM Using Fama-MacBeth Regressions\n\n```{python}\n#@title 10 Value-Weighted industry pfos\n\ndef weighted_avg(x, weights):\n    \"\"\"Calculates the weighted average of a series.\"\"\"\n    return np.average(x, weights=weights)\n\n# Apply weighted_avg function to pivot_table\npfo_vw_ret_excess = df.pivot_table(\n    index='month',\n    columns='industry',\n    values='ret_excess',\n    aggfunc=lambda x: weighted_avg(x, df.loc[x.index, 'mktcap'])\n)\n\npfo_vw_beta_lag = df.pivot_table(\n    index='month',\n    columns='industry',\n    values='beta_lag',\n    aggfunc=lambda x: weighted_avg(x, df.loc[x.index, 'mktcap'])\n)\n\nmean_vw_beta_lag = pfo_vw_beta_lag.mean().rename('mean_beta_lag')\nmean_vw_ret_excess = pfo_vw_ret_excess.mean().rename('mean_ret_excess')\n\nmkt_excess = factors_ff3_monthly['mkt_excess'].mean()\nrf = factors_ff3_monthly['rf'].mean()\n```\n\n```{python}\n#@title Cross-sectional regressions for each month\n\n# Fama-MacBeth (1973) two-pass procedure \n\nrisk_premiums = (df\n  .groupby(\"month\")[['ret_excess', 'beta_lag']]\n  .apply(lambda x: smf.ols(formula=\"ret_excess ~ beta_lag\", data=x).fit().params)\n  .reset_index()\n)\n\n# Time-series Aggregation (i.e. average)\n# average across the time-series dimension to get the mean risk premium for each characteristic\n# calculate t-test statistics for each regressor,\n# critical values of 1.96 (at 5% significance) or 2.576 (at 1% significance) for two-tailed significance tests\n\nmean_premiums = (risk_premiums\n  .melt(id_vars=\"month\", var_name=\"factor\", value_name=\"estimate\")\n  .groupby(\"factor\")[\"estimate\"]\n  .apply(lambda x: pd.Series({\n      \"mean_premium\": 100*x.mean(),\n      \"t_statistic\": x.mean()/x.std()*np.sqrt(len(x))\n    })\n  )\n  .reset_index()\n  .pivot(index=\"factor\", columns=\"level_1\", values=\"estimate\")\n  .reset_index()\n)\n\n# reporting standard errors of risk premiums, after adjusting for autocorrelation (Newey and West (1987) standard errors)\n\nmean_premiums_newey_west = (risk_premiums\n  .melt(id_vars=\"month\", var_name=\"factor\", value_name=\"estimate\")\n  .groupby(\"factor\")\n  .apply(lambda x: (\n      x[\"estimate\"].mean()/\n        smf.ols(\"estimate ~ 1\", x)\n        .fit(cov_type=\"HAC\", cov_kwds={\"maxlags\": 6}).bse\n    ), include_groups=False\n  )\n  .reset_index()\n  .rename(columns={\"Intercept\": \"t_statistic_newey_west\"})\n)\n\nfm_reg = (mean_premiums\n  .merge(mean_premiums_newey_west, on=\"factor\")\n  .round(3)\n)\nfm_reg['mean_premium'] = fm_reg['mean_premium']*12\n\nprint('Annual Risk Premium of Market Beta')\nfm_reg\n```\n\nWe employ the **Fama-MacBeth (1973) two-pass regression method** to estimate the annualized market risk premium under the single-factor CAPM framework. The first pass consists of estimating rolling betas for each firm, which are then aggregated into value-weighted industry betas. The second pass involves running monthly cross-sectional regressions of industry excess returns on lagged betas from 1999 to 2023. To account for possible serial correlation, we report both naïve t-statistics and Newey-West (1987) adjusted statistics.\n\nThe results show a striking pattern:  \n\n- The **estimated intercept (alpha)** averages **9.43% annually**, and this deviation from the theoretical risk-free rate is **statistically significant** (t = 3.89; NW-adjusted t = 3.05).  \n- The **estimated beta risk premium**, on the other hand, is only **1.86% annually**, with **no statistical significance** (t = 0.77; NW-adjusted t = 0.73).\n\nThis finding leads to two critical implications:\n\n1. The CAPM fails to explain a substantial portion of the cross-sectional variation in industry returns.\n2. There is likely a **mispricing component or omitted factor structure** that the single-factor model cannot capture.\n\nFrom a modeling perspective, the coexistence of a strong alpha and weak beta suggests that estimation errors are compounding: both the time-varying nature of betas and the instability of risk premia contribute to the overall model misspecification. These results are consistent with the view that industry-specific risk profiles may involve multiple dimensions of risk, and that static CAPM assumptions are empirically untenable over long horizons.\n\n\n### Security Market Line and Conditional Alpha\n\n```{python}\n#@title CAPM SML prediction plot\n\nimport matplotlib.ticker as mtick\n\n# Combine beta and return\npfo_sml = pd.concat([mean_vw_beta_lag, mean_vw_ret_excess], axis=1)\npfo_sml = pfo_sml.reset_index().rename(columns={'index': 'industry'})\n\n# CAPM Regression Line (fitted to 10 points)\nmodel = smf.ols('mean_ret_excess ~ mean_beta_lag', data=pfo_sml).fit()\nintercept_capm_fit = model.params['Intercept']\n\n# SML: CAPM predicted line (Rf intercept)\nintercept_capm_theory = rf\n\n# SML: Fama-MacBeth implied line (intercept from fm_reg table)\nintercept_fm = fm_reg.loc[fm_reg['factor'] == 'Intercept', 'mean_premium'].values[0] / 100 / 12  # monthly rate\n\n# Start plot\nplt.figure(figsize=(8, 6))\n\n# Scatter plot of 10 industries\nfor _, row in pfo_sml.iterrows():\n    plt.scatter(row['mean_beta_lag'], row['mean_ret_excess'], color='black')\n    plt.annotate(row['industry'], (row['mean_beta_lag'] + 0.01, row['mean_ret_excess']), fontsize=9)\n\n# Draw SMLs\n# Theoretical CAPM SML (Rf, slope = E[Rm - Rf])\nplt.axline((0, intercept_capm_theory), slope=mkt_excess, linestyle='dashed', color='black', label='CAPM (Rf Intercept)')\n\n# Regression fit line (OLS over 10 industry points)\nplt.axline((0, intercept_capm_fit), slope=mkt_excess, linestyle='dashed', color='red', label='OLS Fit on 10 Points')\n\n# Fama-MacBeth implied line (Intercept from FM regression)\nplt.axline((0, intercept_fm), slope=mkt_excess, linestyle='dashed', color='blue', label='Fama-MacBeth Intercept')\n\n# Format\nplt.gca().yaxis.set_major_formatter(mtick.PercentFormatter(1.0))\nplt.xlabel('Mean Beta (Lagged)')\nplt.ylabel('Mean Excess Return (Monthly)')\nplt.title('Unconditional Security Market Line (Industry-Level CAPM)')\nplt.legend(loc='lower right')\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n```\n\n```{python}\n#@title 개별 산업의 mispricing 정도를 파악\n\n# 1. Calculate conditional alpha\npfo_sml['capm_pred'] = pfo_sml['mean_beta_lag'] * mkt_excess\npfo_sml['alpha'] = pfo_sml['mean_ret_excess'] - pfo_sml['capm_pred']\n\n# 2. Sort industries by alpha\npfo_sml_sorted = pfo_sml.sort_values(by='alpha', ascending=False)\n\n# 3. Barplot of alpha\nimport seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.barplot(data=pfo_sml_sorted, x='alpha', y='industry', hue='industry', palette='coolwarm', dodge=False)\nplt.axvline(0, color='black', linestyle='--')\nplt.gca().xaxis.set_major_formatter(mtick.PercentFormatter(1.0))\nplt.xlabel('Conditional Alpha (Monthly)')\nplt.title('Industry-level Conditional Alpha under CAPM')\nplt.tight_layout()\nplt.show()\n```\n\nWe visualize the **unconditional Security Market Line (SML)** implied by the single-factor CAPM across 10 value-weighted industry portfolios. Each point on the plot corresponds to an industry, placed according to its **average market beta** (horizontal axis) and **realized average excess return** (vertical axis) over the sample period.\n\nThree lines are shown for comparison:\n\n- The **black dashed line** represents the **theoretical CAPM SML**, where the intercept equals the average risk-free rate and the slope equals the average market risk premium.\n- The **red dashed line** is a simple **OLS fit** across the 10 industry points, which minimizes cross-sectional error.\n- The **blue dashed line** uses the **Fama-MacBeth estimated intercept**, incorporating pricing errors in the CAPM framework.\n\nMost industry points lie between the CAPM-predicted line and the Fama-MacBeth-adjusted line. This suggests that while the risk-return relationship remains approximately linear, the CAPM fails to account for substantial pricing errors, as reflected in large intercept terms.\n\nTo quantify these deviations more precisely, we calculate **conditional alphas** for each industry. These alphas represent the **difference between realized and CAPM-predicted returns**, conditional on the industry’s average beta.  \n\n- **Positive alpha** implies the industry earned more than predicted by its systematic risk exposure.\n- **Negative alpha** suggests overvaluation relative to CAPM expectations.\n\nThe results reveal persistent **mispricing across several sectors**, reinforcing earlier conclusions about the model’s empirical inadequacy. The CAPM may still serve as a baseline pricing model, but the presence of **large unexplained returns** calls for either a **multi-factor extension** or a fundamental rethinking of the linear risk-return paradigm.\n\n## Conclusions\n\nThis short study evaluates the empirical validity of the single-factor CAPM using value-weighted industry portfolios over a 25-year period (1999–2023). Several key findings emerge:\n\n- **Industry-specific market betas exhibit substantial time variation**, contradicting the CAPM's assumption of stable factor loadings. This instability weakens the model’s explanatory power over long horizons and complicates its use in asset pricing and cost-of-capital estimation.\n\n- The market risk premium, when estimated empirically, shows large uncertainty and wide confidence bounds, limiting its practical usefulness in capital budgeting and valuation decisions.\n\n- Fama-MacBeth regressions reveal economically large and **statistically significant intercepts (alphas)**, while the estimated risk premium on beta is both small and statistically insignificant. This suggests that the single-factor CAPM omits important pricing components or fails to capture cross-sectional return dynamics.\n\n- Industry-level CAPM predictions show **structural deviations from theoretical SML predictions**. Finance and Transportation exhibit relatively low pricing errors, potentially due to regulatory distortions (e.g., “Too Big to Fail”) or reduced market responsiveness.\n\n- Lastly, the increasing dominance of a few large-cap firms—particularly in Services and Manufacturing—implies that **market-wide returns are increasingly shaped by concentrated industry dynamics**. This structural concentration further limits the diversification benefits assumed under standard portfolio theory.\n\nOverall, while CAPM remains a foundational framework in asset pricing, this analysis highlights its limitations in capturing the complexities of modern equity markets—particularly when applied at the industry level over long horizons.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"number-sections":false,"output-file":"capm_industry.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","author":"gitSAM","jupyter":"python3","theme":"cosmo","title":"Industry CAPM","subtitle":"Time-Varying Risk and Mispricing (1999–2023)","date":"2025-03-23","abstract":"This study investigates the empirical validity of the single-factor Capital Asset Pricing Model (CAPM) at the industry level using monthly data from 1999 to 2023. Employing value-weighted returns across ten industry portfolios, we assess the time variation in market betas, the uncertainty of estimated risk premiums, and the magnitude of conditional pricing errors. Our findings reveal substantial instability in beta estimates, statistically insignificant market risk premia, and persistent alpha deviations—indicating that CAPM omits key structural factors in explaining cross-sectional return differences. These results question the model's robustness as a tool for cost of equity estimation and portfolio construction.","keywords":"beta instability, Fama-MacBeth regression, security market line, conditional alpha, mispricing"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}